{"version":3,"file":"static/js/691.f89fc5ca.chunk.js","mappings":"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","sources":["components/CoinInput.tsx","components/Spinner.tsx","lib/CoinsMetadata.ts","pages/AssetsPage.tsx"],"sourcesContent":["import { Menu, Transition } from \"@headlessui/react\";\nimport classNames from \"classnames\";\nimport { formatUnits, parseUnits } from \"ethers/lib/utils\";\nimport { BigNumber } from \"fuels\";\nimport { useCallback } from \"react\";\nimport { useEffect } from \"react\";\nimport { Fragment, useState } from \"react\";\nimport NumberFormat from \"react-number-format\";\nimport urlJoin from \"url-join\";\n\nconst { PUBLIC_URL } = process.env;\n\nconst style = {\n  transferPropContainer: `bg-[#20242A] rounded-2xl p-4 text-3xl border border-[#20242A] \n      flex justify-between`,\n  transferPropInput: `bg-transparent placeholder:text-[#B2B9D2] outline-none w-full text-2xl`,\n  // coin selector\n  currencySelector: `flex1`,\n  currencySelectorMenuItems: `absolute w-full mt-2 bg-[#191B1F] divide-gray-100 \n      rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none z-10`,\n  currencySelectorItem: `flex justify-around rounded-md w-full px-2 py-2 text-sm cursor-pointer`,\n  currencySelectorContent: `w-full h-min flex justify-between items-center bg-[#2D2F36] \n      rounded-2xl text-xl font-medium p-2 mt-[-0.2rem] focus:outline-none`,\n  currencySelectorTicker: `mx-2`,\n  menuWrapper: `px-1 py-1`,\n};\n\nexport interface Coin {\n  assetId: string;\n  name?: string;\n  img?: string;\n}\n\nexport function CoinSelector({\n  value,\n  coins,\n  onChange,\n}: {\n  value?: Coin | null;\n  onChange?: (coin: Coin) => void;\n  coins?: Array<Coin>;\n}) {\n  const [selected, setSelected] = useState<Coin | null>(null);\n  const hasCoins = coins && coins.length > 1;\n\n  useEffect(() => {\n    if (!value) {\n      return setSelected(null);\n    }\n    setSelected(value);\n  }, [value]);\n\n  const handleSelect = useCallback(\n    (coin: Coin) => {\n      setSelected(coin);\n      onChange?.(coin);\n    },\n    [setSelected, onChange]\n  );\n\n  return (\n    <div className={style.currencySelector}>\n      <Menu as=\"div\" className=\"relative inline-block text-left\">\n        <div>\n          <Menu.Button\n            className={classNames({\n              \"cursor-default\": !hasCoins,\n            })}\n          >\n            <div\n              className={classNames(style.currencySelectorContent, {\n                \"hover:bg-opacity-30\": hasCoins,\n              })}\n            >\n              {selected && selected.img && (\n                <img\n                  className=\"rounded-full border-none\"\n                  src={urlJoin(PUBLIC_URL, selected.img)}\n                  alt=\"eth\"\n                  height={24}\n                  width={24}\n                />\n              )}\n              <div className={style.currencySelectorTicker}>\n                {selected?.name}\n              </div>\n            </div>\n          </Menu.Button>\n        </div>\n        {hasCoins && (\n          <Transition\n            as={Fragment}\n            enter=\"transition ease-out duration-100\"\n            enterFrom=\"transform opacity-0 scale-95\"\n            enterTo=\"transform opacity-100 scale-100\"\n            leave=\"transition ease-in duration-75\"\n            leaveFrom=\"transform opacity-100 scale-100\"\n            leaveTo=\"transform opacity-0 scale-95\"\n          >\n            <Menu.Items className={style.currencySelectorMenuItems}>\n              <div className={style.menuWrapper}>\n                {coins.map((coin) => (\n                  <Menu.Item key={coin.assetId}>\n                    {({ active }) => (\n                      <div\n                        className={classNames(style.currencySelectorItem, {\n                          \"bg-[#2D2F36] text-white\": active,\n                          \"text-white\": !active,\n                        })}\n                        onClick={() => handleSelect(coin)}\n                      >\n                        {coin && coin.img && (\n                          <div className=\"flex flex-wrap justify-center\">\n                            <div className=\"w-6/12 px-4 sm:w-4/12\">\n                              <img\n                                className=\"h-auto max-w-full rounded border-none align-middle shadow-lg\"\n                                src={urlJoin(PUBLIC_URL, coin.img)}\n                                alt=\"eth\"\n                                height={24}\n                                width={24}\n                              />\n                            </div>\n                          </div>\n                        )}\n                        <div className={style.currencySelectorTicker}>\n                          {coin?.name}\n                        </div>\n                      </div>\n                    )}\n                  </Menu.Item>\n                ))}\n              </div>\n            </Menu.Items>\n          </Transition>\n        )}\n      </Menu>\n    </div>\n  );\n}\n\nexport function CoinInput({\n  amount,\n  coin,\n  coins,\n  disabled,\n  onChangeAmount,\n  onChangeCoin,\n  onInput,\n}: {\n  disabled?: boolean;\n  amount?: BigNumber | null;\n  coin?: Coin | null;\n  coins?: Coin[];\n  onChangeAmount?: (value: BigNumber | null) => void;\n  onChangeCoin?: (value: Coin) => void;\n  onInput?: (...args: any) => void;\n}) {\n  return (\n    <div className={style.transferPropContainer}>\n      <div className=\"flex-1\">\n        <NumberFormat\n          placeholder=\"0.0\"\n          value={amount && formatUnits(amount, 9)}\n          displayType={disabled ? \"text\" : \"input\"}\n          onValueChange={(e) => onChangeAmount?.(parseUnits(e.value, 9))}\n          className={style.transferPropInput}\n          thousandSeparator={false}\n          onInput={onInput}\n        />\n      </div>\n      <CoinSelector coins={coins} value={coin} onChange={onChangeCoin} />\n    </div>\n  );\n}\n","export function Spinner() {\n  return (\n    <svg\n      className=\"-ml-1 h-5 w-5 animate-spin text-white\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n    >\n      <circle\n        className=\"opacity-25\"\n        cx=\"12\"\n        cy=\"12\"\n        r=\"10\"\n        stroke=\"currentColor\"\n        strokeWidth=\"4\"\n      ></circle>\n      <path\n        className=\"opacity-75\"\n        fill=\"currentColor\"\n        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n      ></path>\n    </svg>\n  );\n}\n","import { Coin } from 'src/components/CoinInput';\nimport { CONTRACT_ID, TOKEN_ID } from 'src/config';\n\nconst CoinsMetadata: Array<Coin> = [\n  {\n    name: 'ETH',\n    assetId: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    img: '/icons/eth.svg',\n  },\n  {\n    name: 'DAI',\n    // TODO: Remove this when adding dynamic token insertion\n    // Make temporarily easy to change token contract id\n    // https://github.com/FuelLabs/swayswap-demo/issues/33\n    assetId: TOKEN_ID,\n    img: '/icons/dai.svg',\n  },\n  {\n    name: 'SWAY',\n    // TODO: Remove this when adding dynamic token insertion\n    // Make temporarily easy to change token contract id\n    // https://github.com/FuelLabs/swayswap-demo/issues/33\n    assetId: CONTRACT_ID,\n    img: '/icons/sway.svg',\n  },\n];\n\nexport default CoinsMetadata;\n","import { useEffect, useState } from \"react\";\nimport { FaFaucet } from \"react-icons/fa\";\nimport { useWallet, useAppContext } from \"src/context/AppContext\";\nimport { CoinQuantity } from \"fuels\";\nimport { BigNumber } from \"ethers\";\nimport { Coin, CoinInput } from \"src/components/CoinInput\";\nimport CoinsMetadata from \"src/lib/CoinsMetadata\";\nimport { Spinner } from \"src/components/Spinner\";\n\nconst style = {\n  wrapper: `w-screen flex flex-1 items-center justify-center mb-14`,\n  content: `bg-[#191B1F] w-[40rem] rounded-2xl p-4`,\n  formHeader: `px-2 flex items-center justify-between font-semibold text-xl mb-8`,\n  faucetButton: `hover:bg-[#41444F] cursor-pointer p-1 rounded-xl flex justify-center`,\n};\n\ntype Asset = Coin & { amount: BigNumber };\nconst mergeCoinsWithMetadata = (coins: CoinQuantity[]): Array<Asset> => {\n  return coins.map((coin) => {\n    const coinMetadata = CoinsMetadata.find((c) => c.assetId === coin.assetId);\n\n    return {\n      // TODO: Create default Coin Metadata when token didn't have registered data\n      // Another options could be querying from the contract\n      // https://github.com/FuelLabs/swayswap-demo/issues/33\n      name: coinMetadata?.name || \"404\",\n      img: coinMetadata?.img || \"/icons/other.svg\",\n      assetId: coin.assetId,\n      amount: coin.amount || 0,\n    };\n  });\n};\n\nexport default function AssetsPage() {\n  const [coins, setCoins] = useState<CoinQuantity[]>([]);\n  const { faucet } = useAppContext();\n  const wallet = useWallet();\n  const [isLoading, setLoading] = useState(false);\n\n  // Load balances\n  const loadCoins = async () => {\n    return wallet!.getBalances().then((coins) => {\n      setCoins(coins);\n    });\n  };\n\n  const handleClickFaucet = async () => {\n    setLoading(true);\n    try {\n      await faucet();\n      await loadCoins();\n    } finally {\n      setTimeout(() => {\n        setLoading(false);\n      }, 1000);\n    }\n  };\n\n  useEffect(() => {\n    if (wallet?.address) loadCoins();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [wallet?.address]);\n\n  return (\n    <div className={style.wrapper}>\n      <div className={style.content}>\n        <div className={style.formHeader}>\n          <div>Assets</div>\n          <div className=\"flex w-10 justify-center rounded-xl p-1\">\n            {isLoading ? (\n              <div className=\"flex justify-center rounded-xl p-1\">\n                <Spinner />\n              </div>\n            ) : (\n              <div className={style.faucetButton} onClick={handleClickFaucet}>\n                <FaFaucet />\n              </div>\n            )}\n          </div>\n        </div>\n\n        {mergeCoinsWithMetadata(coins).map((coin) => {\n          return (\n            <div className=\"my-4\" key={coin.assetId}>\n              <CoinInput\n                coin={coin}\n                disabled={true}\n                amount={coin.amount}\n                coins={coin ? [coin] : []}\n              />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"names":["PUBLIC_URL","process","style","CoinSelector","value","coins","onChange","useState","selected","setSelected","hasCoins","length","useEffect","handleSelect","useCallback","coin","className","as","classNames","img","src","urlJoin","alt","height","width","name","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","map","active","onClick","assetId","CoinInput","amount","disabled","onChangeAmount","onChangeCoin","onInput","placeholder","formatUnits","displayType","onValueChange","e","parseUnits","thousandSeparator","Spinner","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","CoinsMetadata","TOKEN_ID","CONTRACT_ID","mergeCoinsWithMetadata","coinMetadata","c","AssetsPage","setCoins","faucet","useAppContext","wallet","useWallet","isLoading","setLoading","loadCoins","getBalances","then","handleClickFaucet","setTimeout","address"],"sourceRoot":""}