{"version":3,"file":"static/js/889.244435dd.chunk.js","mappings":"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","sources":["components/CoinInput.tsx","lib/CoinsMetadata.ts","components/InvertButton.tsx","pages/SwapPage.tsx"],"sourcesContent":["import { Menu, Transition } from \"@headlessui/react\";\nimport classNames from \"classnames\";\nimport { formatUnits, parseUnits } from \"ethers/lib/utils\";\nimport { BigNumber } from \"fuels\";\nimport { useCallback } from \"react\";\nimport { useEffect } from \"react\";\nimport { Fragment, useState } from \"react\";\nimport NumberFormat from \"react-number-format\";\nimport urlJoin from \"url-join\";\n\nconst { PUBLIC_URL } = process.env;\n\nconst style = {\n  transferPropContainer: `bg-[#20242A] rounded-2xl p-4 text-3xl border border-[#20242A] \n      flex justify-between`,\n  transferPropInput: `bg-transparent placeholder:text-[#B2B9D2] outline-none w-full text-2xl`,\n  // coin selector\n  currencySelector: `flex1`,\n  currencySelectorMenuItems: `absolute w-full mt-2 bg-[#191B1F] divide-gray-100 \n      rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none z-10`,\n  currencySelectorItem: `flex justify-around rounded-md w-full px-2 py-2 text-sm cursor-pointer`,\n  currencySelectorContent: `w-full h-min flex justify-between items-center bg-[#2D2F36] \n      rounded-2xl text-xl font-medium p-2 mt-[-0.2rem] focus:outline-none`,\n  currencySelectorTicker: `mx-2`,\n  menuWrapper: `px-1 py-1`,\n};\n\nexport interface Coin {\n  assetId: string;\n  name?: string;\n  img?: string;\n}\n\nexport function CoinSelector({\n  value,\n  coins,\n  onChange,\n}: {\n  value?: Coin | null;\n  onChange?: (coin: Coin) => void;\n  coins?: Array<Coin>;\n}) {\n  const [selected, setSelected] = useState<Coin | null>(null);\n  const hasCoins = coins && coins.length > 1;\n\n  useEffect(() => {\n    if (!value) {\n      return setSelected(null);\n    }\n    setSelected(value);\n  }, [value]);\n\n  const handleSelect = useCallback(\n    (coin: Coin) => {\n      setSelected(coin);\n      onChange?.(coin);\n    },\n    [setSelected, onChange]\n  );\n\n  return (\n    <div className={style.currencySelector}>\n      <Menu as=\"div\" className=\"relative inline-block text-left\">\n        <div>\n          <Menu.Button\n            className={classNames({\n              \"cursor-default\": !hasCoins,\n            })}\n          >\n            <div\n              className={classNames(style.currencySelectorContent, {\n                \"hover:bg-opacity-30\": hasCoins,\n              })}\n            >\n              {selected && selected.img && (\n                <img\n                  className=\"rounded-full border-none\"\n                  src={urlJoin(PUBLIC_URL, selected.img)}\n                  alt=\"eth\"\n                  height={24}\n                  width={24}\n                />\n              )}\n              <div className={style.currencySelectorTicker}>\n                {selected?.name}\n              </div>\n            </div>\n          </Menu.Button>\n        </div>\n        {hasCoins && (\n          <Transition\n            as={Fragment}\n            enter=\"transition ease-out duration-100\"\n            enterFrom=\"transform opacity-0 scale-95\"\n            enterTo=\"transform opacity-100 scale-100\"\n            leave=\"transition ease-in duration-75\"\n            leaveFrom=\"transform opacity-100 scale-100\"\n            leaveTo=\"transform opacity-0 scale-95\"\n          >\n            <Menu.Items className={style.currencySelectorMenuItems}>\n              <div className={style.menuWrapper}>\n                {coins.map((coin) => (\n                  <Menu.Item key={coin.assetId}>\n                    {({ active }) => (\n                      <div\n                        className={classNames(style.currencySelectorItem, {\n                          \"bg-[#2D2F36] text-white\": active,\n                          \"text-white\": !active,\n                        })}\n                        onClick={() => handleSelect(coin)}\n                      >\n                        {coin && coin.img && (\n                          <div className=\"flex flex-wrap justify-center\">\n                            <div className=\"w-6/12 px-4 sm:w-4/12\">\n                              <img\n                                className=\"h-auto max-w-full rounded border-none align-middle shadow-lg\"\n                                src={urlJoin(PUBLIC_URL, coin.img)}\n                                alt=\"eth\"\n                                height={24}\n                                width={24}\n                              />\n                            </div>\n                          </div>\n                        )}\n                        <div className={style.currencySelectorTicker}>\n                          {coin?.name}\n                        </div>\n                      </div>\n                    )}\n                  </Menu.Item>\n                ))}\n              </div>\n            </Menu.Items>\n          </Transition>\n        )}\n      </Menu>\n    </div>\n  );\n}\n\nexport function CoinInput({\n  amount,\n  coin,\n  coins,\n  disabled,\n  onChangeAmount,\n  onChangeCoin,\n  onInput,\n}: {\n  disabled?: boolean;\n  amount?: BigNumber | null;\n  coin?: Coin | null;\n  coins?: Coin[];\n  onChangeAmount?: (value: BigNumber | null) => void;\n  onChangeCoin?: (value: Coin) => void;\n  onInput?: (...args: any) => void;\n}) {\n  return (\n    <div className={style.transferPropContainer}>\n      <div className=\"flex-1\">\n        <NumberFormat\n          placeholder=\"0.0\"\n          value={amount && formatUnits(amount, 9)}\n          displayType={disabled ? \"text\" : \"input\"}\n          onValueChange={(e) => onChangeAmount?.(parseUnits(e.value, 9))}\n          className={style.transferPropInput}\n          thousandSeparator={false}\n          onInput={onInput}\n        />\n      </div>\n      <CoinSelector coins={coins} value={coin} onChange={onChangeCoin} />\n    </div>\n  );\n}\n","import { Coin } from 'src/components/CoinInput';\nimport { CONTRACT_ID, TOKEN_ID } from 'src/config';\n\nconst CoinsMetadata: Array<Coin> = [\n  {\n    name: 'ETH',\n    assetId: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    img: '/icons/eth.svg',\n  },\n  {\n    name: 'DAI',\n    // TODO: Remove this when adding dynamic token insertion\n    // Make temporarily easy to change token contract id\n    // https://github.com/FuelLabs/swayswap-demo/issues/33\n    assetId: TOKEN_ID,\n    img: '/icons/dai.svg',\n  },\n  {\n    name: 'SWAY',\n    // TODO: Remove this when adding dynamic token insertion\n    // Make temporarily easy to change token contract id\n    // https://github.com/FuelLabs/swayswap-demo/issues/33\n    assetId: CONTRACT_ID,\n    img: '/icons/sway.svg',\n  },\n];\n\nexport default CoinsMetadata;\n","import { AiOutlineArrowDown } from \"react-icons/ai\";\n\nconst style = {\n  confirmButton: `rounded-2xl font-semibold p-1 border border-[#20242A] bg-[#191B1F] border-4 rounded-2xl cursor-pointer`,\n};\n\nexport function InvertButton({ onClick }: { onClick: () => void }) {\n  return (\n    <div onClick={onClick} className={style.confirmButton}>\n      <AiOutlineArrowDown size={32} />\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { RiSettings3Fill } from \"react-icons/ri\";\nimport assets from \"src/lib/CoinsMetadata\";\nimport { Coin, CoinInput } from \"src/components/CoinInput\";\nimport { InvertButton } from \"src/components/InvertButton\";\nimport { useContract } from \"src/context/AppContext\";\nimport { SwayswapContractAbi } from \"src/types/contracts\";\nimport { BigNumber } from \"fuels\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Pages } from \"src/types/pages\";\n\nconst style = {\n  wrapper: `w-screen flex flex-1 items-center justify-center mb-14`,\n  content: `bg-[#191B1F] w-[40rem] rounded-2xl p-4`,\n  formHeader: `px-2 flex items-center justify-between font-semibold text-xl`,\n  confirmButton: `bg-[#58c09b] my-2 rounded-2xl py-6 px-8 text-xl font-semibold flex items-center\n    justify-center cursor-pointer border border-[#58c09b] hover:border-[#234169] mt-8`,\n  switchDirection: `flex items-center justify-center -my-3`,\n};\n\nconst getSwapWithMaximumForwardAmount = async (\n  contract: SwayswapContractAbi,\n  assetId: string,\n  amount: BigNumber\n) => {\n  const forwardAmount =\n    await contract.callStatic.swap_with_maximum_forward_amount(amount, {\n      forward: [1, assetId],\n    });\n  return forwardAmount;\n};\n\nconst getSwapWithMinimumMinValue = async (\n  contract: SwayswapContractAbi,\n  assetId: string,\n  amount: BigNumber\n) => {\n  const minValue = await contract.callStatic.swap_with_minimum_min_value(\n    amount,\n    {\n      forward: [1, assetId],\n    }\n  );\n  return minValue;\n};\n\nexport default function SwapPage() {\n  const contract = useContract()!;\n  const [[coinFrom, coinTo], setCoins] = useState<[Coin, Coin]>([\n    assets[0],\n    assets[1],\n  ]);\n  const getOtherCoins = (coins: Coin[]) =>\n    assets.filter(({ assetId }) => !coins.find((c) => c.assetId === assetId));\n  const [fromAmount, setFromAmount] = useState(null as BigNumber | null);\n  const [toAmount, setToAmount] = useState(null as BigNumber | null);\n  const [mode, setMode] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e: any) => {\n    if (!fromAmount) {\n      throw new Error('\"fromAmount\" is required');\n    }\n    if (!toAmount) {\n      throw new Error('\"toAmount\" is required');\n    }\n\n    const deadline = 1000;\n\n    if (mode === \"with_maximum\") {\n      const forwardAmount = await getSwapWithMaximumForwardAmount(\n        contract,\n        coinFrom.assetId,\n        toAmount\n      );\n      await contract.functions.swap_with_maximum(toAmount, deadline, {\n        forward: [forwardAmount, coinFrom.assetId],\n        variableOutputs: 1,\n      });\n    } else if (mode === \"with_minimum\") {\n      const minValue = await getSwapWithMinimumMinValue(\n        contract,\n        coinFrom.assetId,\n        fromAmount\n      );\n      await contract.functions.swap_with_minimum(minValue, deadline, {\n        forward: [fromAmount, coinFrom.assetId],\n        variableOutputs: 1,\n      });\n    } else {\n      throw new Error(`Invalid mode \"${mode}\"`);\n    }\n\n    // TODO: Improve feedback after swap\n    //\n    navigate(Pages.assets);\n  };\n\n  const setAmountField = (amount: BigNumber | null, field: \"from\" | \"to\") => {\n    if (field === \"from\" && mode !== \"with_maximum\") {\n      setFromAmount(amount);\n\n      if (amount) {\n        setIsLoading(true);\n        (async () => {\n          const minValue = await getSwapWithMinimumMinValue(\n            contract,\n            coinFrom.assetId,\n            amount\n          );\n\n          setToAmount(minValue);\n        })().finally(() => setIsLoading(false));\n      }\n    } else if (field === \"to\" && mode !== \"with_minimum\") {\n      setToAmount(amount);\n\n      if (amount) {\n        setIsLoading(true);\n        (async () => {\n          const forwardAmount = await getSwapWithMaximumForwardAmount(\n            contract,\n            coinFrom.assetId,\n            amount\n          );\n\n          setFromAmount(forwardAmount);\n        })().finally(() => setIsLoading(false));\n      }\n    }\n  };\n\n  return (\n    <div className={style.wrapper}>\n      <div className={style.content}>\n        <div className={style.formHeader}>\n          <h1>Swap</h1>\n          <div>\n            <RiSettings3Fill />\n          </div>\n        </div>\n\n        <div className=\"mt-6\">\n          <CoinInput\n            coin={coinFrom}\n            amount={fromAmount}\n            onInput={() => setMode(\"with_minimum\")}\n            onChangeAmount={(amount) => setAmountField(amount, \"from\")}\n            coins={getOtherCoins([coinFrom, coinTo])}\n            onChangeCoin={(coin: Coin) => setCoins([coin, coinTo])}\n          />\n        </div>\n        <div className={style.switchDirection}>\n          <InvertButton\n            onClick={() => {\n              const _toAmount = toAmount;\n              setToAmount(fromAmount);\n              setFromAmount(_toAmount);\n              setCoins([coinTo, coinFrom]);\n            }}\n          />\n        </div>\n        <div className=\"mb-10\">\n          <CoinInput\n            coin={coinTo}\n            amount={toAmount}\n            onInput={() => setMode(\"with_maximum\")}\n            onChangeAmount={(amount) => setAmountField(amount, \"to\")}\n            coins={getOtherCoins([coinFrom, coinTo])}\n            onChangeCoin={(coin: Coin) => setCoins([coinFrom, coin])}\n          />\n        </div>\n        <div onClick={(e) => handleSubmit(e)} className={style.confirmButton}>\n          Confirm\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["PUBLIC_URL","process","style","CoinSelector","value","coins","onChange","useState","selected","setSelected","hasCoins","length","useEffect","handleSelect","useCallback","coin","className","as","classNames","img","src","urlJoin","alt","height","width","name","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","map","active","onClick","assetId","CoinInput","amount","disabled","onChangeAmount","onChangeCoin","onInput","placeholder","formatUnits","displayType","onValueChange","e","parseUnits","thousandSeparator","CoinsMetadata","TOKEN_ID","CONTRACT_ID","InvertButton","size","getSwapWithMaximumForwardAmount","contract","callStatic","swap_with_maximum_forward_amount","forward","forwardAmount","getSwapWithMinimumMinValue","swap_with_minimum_min_value","minValue","SwapPage","useContract","assets","coinFrom","coinTo","setCoins","getOtherCoins","find","c","fromAmount","setFromAmount","toAmount","setToAmount","mode","setMode","setIsLoading","navigate","useNavigate","handleSubmit","Error","deadline","functions","swap_with_maximum","variableOutputs","swap_with_minimum","Pages","setAmountField","field","finally","_toAmount"],"sourceRoot":""}