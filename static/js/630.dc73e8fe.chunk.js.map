{"version":3,"file":"static/js/630.dc73e8fe.chunk.js","mappings":"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","sources":["components/Input.tsx","components/Menu.tsx","components/CoinsListDialog.tsx","components/CoinSelector.tsx","components/CoinInput.tsx","hooks/useBalances.ts","components/Spinner.tsx","lib/CoinsMetadata.ts","lib/utils.ts","pages/PoolPage/AddLiquidity.tsx"],"sourcesContent":["import { AriaTextFieldOptions, useTextField } from \"@react-aria/textfield\";\nimport { FC, forwardRef, useRef } from \"react\";\nimport cx from \"classnames\";\nimport mergeRefs from \"react-merge-refs\";\n\nconst style = {\n  input: `appearance-none w-full rounded-md bg-gray-700 px-4 py-2 focus-ring text-gray-100`,\n};\n\ntype InputProps = AriaTextFieldOptions<\"input\"> & {\n  className?: string;\n};\n\nexport const Input: FC<InputProps> = forwardRef<HTMLInputElement, InputProps>(\n  ({ className, ...props }, ref) => {\n    const innerRef = useRef<HTMLInputElement | null>(null);\n    let { inputProps } = useTextField(props, innerRef);\n    return (\n      <input\n        ref={mergeRefs([innerRef, ref])}\n        className={cx(className, style.input)}\n        {...inputProps}\n      />\n    );\n  }\n);\n","import { ItemProps, Node } from \"@react-types/shared\";\nimport { useMenu, useMenuItem } from \"@react-aria/menu\";\nimport { useTreeState, TreeProps, TreeState } from \"@react-stately/tree\";\nimport { Item } from \"@react-stately/collections\";\nimport { FC, Key, useEffect, useRef } from \"react\";\n\ntype ListItemProps = {\n  item: Node<any>;\n  state: TreeState<any>;\n  onAction?: (key: Key) => void;\n  className?: string;\n};\n\nfunction ListItem({ item, state, onAction, className }: ListItemProps) {\n  // Get props for the menu item element\n  const ref = useRef<HTMLLIElement | null>(null);\n  const isDisabled = state.disabledKeys.has(item.key);\n  const isFocused = state.selectionManager.focusedKey === item.key;\n\n  const { menuItemProps } = useMenuItem(\n    {\n      key: item.key,\n      isDisabled,\n      onAction,\n    },\n    state,\n    ref\n  );\n\n  return (\n    <li\n      {...menuItemProps}\n      ref={ref}\n      className={className}\n      data-focused={isFocused}\n    >\n      {item.rendered}\n    </li>\n  );\n}\n\nexport type MenuProps = TreeProps<any> & {\n  onAction?: (key: Key) => void;\n  className?: string;\n  focusOnMount?: boolean;\n};\n\ntype MenuComponent = FC<MenuProps> & {\n  Item: typeof CustomItem;\n};\n\nexport const Menu: MenuComponent = ({\n  className,\n  onAction,\n  focusOnMount,\n  ...props\n}) => {\n  // Create state based on the incoming props\n  const state = useTreeState({ ...props, selectionMode: \"none\" });\n\n  // Get props for the menu element\n  const ref = useRef<HTMLUListElement | null>(null);\n  const { menuProps } = useMenu(props, state, ref);\n\n  useEffect(() => {\n    if (focusOnMount) {\n      ref.current?.focus();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <ul {...menuProps} ref={ref} className={className}>\n      {[...state.collection].map((item) => (\n        <ListItem\n          className={item.props.className}\n          key={item.key}\n          item={item}\n          state={state}\n          onAction={onAction}\n        />\n      ))}\n    </ul>\n  );\n};\n\ntype CustomItemComponent = FC<ItemProps<any> & { className?: string }>;\nconst CustomItem = Item as CustomItemComponent;\nMenu.Item = CustomItem;\n","import { useState } from \"react\";\nimport CoinsMetadata from \"src/lib/CoinsMetadata\";\nimport { Coin } from \"src/types\";\nimport { Input } from \"./Input\";\nimport { Menu } from \"./Menu\";\n\nconst style = {\n  input: `appearance-none w-full rounded-md bg-gray-700 px-4 py-2 focus-ring text-gray-100`,\n  coinItem: `py-2 px-6 flex items-center gap-3 border-t border-gray-700\n  hover:bg-gray-700/50 hover:cursor-pointer focus-ring`,\n  noResults: `px-6 py-4 border-t border-gray-700`,\n};\n\nexport type CoinListModalProps = {\n  onSelect?: (assetId: string) => void;\n};\n\nexport function CoinsListDialog({ onSelect }: CoinListModalProps) {\n  const [value, setValue] = useState(\"\");\n\n  function filterBySearch(coin: Coin) {\n    if (!Boolean(value.length)) return coin;\n    return coin.name?.toLowerCase().includes(value.toLocaleLowerCase());\n  }\n\n  const filtered = CoinsMetadata.filter(filterBySearch);\n  const hasResults = Boolean(filtered.length);\n\n  return (\n    <div>\n      <header className=\"py-4 px-6 pb-5\">\n        <h2 className=\"text-gray-50 text-lg mb-3\">Select a token</h2>\n        <Input\n          type=\"text\"\n          placeholder=\"Search by name...\"\n          value={value}\n          onChange={setValue}\n        />\n      </header>\n      {hasResults ? (\n        <Menu\n          onAction={(key) => onSelect?.(key as string)}\n          className=\"pb-2\"\n          focusOnMount\n        >\n          {filtered.map((coin) => (\n            <Menu.Item key={coin.assetId} className={style.coinItem}>\n              <img\n                className=\"rounded-full border-none ml-1\"\n                src={coin.img}\n                alt={coin.name}\n                height={30}\n                width={30}\n              />\n              <div className=\"flex flex-col\">\n                <div className=\"text-gray-50\">{coin.symbol}</div>\n                <div className=\"text-sm\">{coin.name}</div>\n              </div>\n            </Menu.Item>\n          ))}\n        </Menu>\n      ) : (\n        <div className={style.noResults}>😢 Oops, no token found!</div>\n      )}\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { FiChevronDown } from \"react-icons/fi\";\nimport CoinsMetadata from \"src/lib/CoinsMetadata\";\nimport { Coin } from \"src/types\";\n\nimport { Button } from \"./Button\";\nimport { CoinsListDialog } from \"./CoinsListDialog\";\nimport { Dialog, useDialogProps } from \"./Dialog\";\n\nconst style = {\n  currencySelector: `flex1`,\n};\n\ntype CoinSelectorProps = {\n  value?: Coin | null;\n  onChange?: (coin: Coin) => void;\n  isReadOnly?: boolean;\n};\n\nexport function CoinSelector({\n  value,\n  onChange,\n  isReadOnly,\n}: CoinSelectorProps) {\n  const [selected, setSelected] = useState<Coin | null>(null);\n  const dialog = useDialogProps();\n\n  useEffect(() => {\n    if (!value) return setSelected(null);\n    setSelected(value);\n  }, [value]);\n\n  function handleSelect(assetId: string) {\n    dialog.close();\n    setSelected(CoinsMetadata.find((coin) => coin.assetId === assetId)!);\n  }\n\n  return (\n    <div className={style.currencySelector}>\n      <Button\n        {...dialog.openButtonProps}\n        size=\"md\"\n        className=\"coin-selector\"\n        isDisabled={isReadOnly}\n      >\n        {selected && selected.img && (\n          <img\n            className=\"rounded-full border-none ml-1\"\n            src={selected.img}\n            alt={selected.name}\n            height={20}\n            width={20}\n          />\n        )}\n        <div className=\"ml-2\">{selected?.name}</div>\n        {!isReadOnly && <FiChevronDown className=\"text-gray-500\" />}\n      </Button>\n      <Dialog {...dialog.dialogProps}>\n        <Dialog.Content>\n          <CoinsListDialog onSelect={handleSelect} />\n        </Dialog.Content>\n      </Dialog>\n    </div>\n  );\n}\n","import { toBigInt } from \"fuels\";\nimport { formatUnits, parseUnits } from \"ethers/lib/utils\";\nimport { forwardRef, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport NumberFormat, { NumberFormatValues } from \"react-number-format\";\nimport { DECIMAL_UNITS } from \"src/config\";\nimport { CoinSelector } from \"./CoinSelector\";\nimport { Button } from \"./Button\";\nimport { Coin } from \"src/types\";\nimport { useBalances } from \"src/hooks/useBalances\";\n\n// Max value supported\nconst MAX_U64_VALUE = 0xffff_ffff_ffff_ffff;\n\nconst style = {\n  transferPropContainer: `flex bg-gray-700 rounded-2xl p-2 border border-gray-700`,\n  input: `mx-2 h-10 bg-transparent placeholder:text-gray-300 outline-none text-xl flex items-center`,\n  rightWrapper: `flex flex-1 flex-col items-end`,\n  maxButton: `text-xs py-0 px-1 h-auto bg-primary-800/60 text-primary-500 hover:bg-primary-800`,\n};\n\ntype UseCoinParams = {\n  amount?: bigint | null;\n  isReadOnly?: boolean;\n  coinSelectorDisabled?: boolean;\n  coin?: Coin | null;\n  gasFee?: bigint;\n  showBalance?: boolean;\n  onInput?: (...args: any) => void;\n  onChange?: (val: bigint | null) => void;\n  onChangeCoin?: (value: Coin) => void;\n};\n\ntype DisplayType = \"input\" | \"text\";\n\ntype CoinInputParameters = UseCoinParams & {\n  value: string;\n  balance?: string;\n  displayType: DisplayType;\n  isReadOnly?: boolean;\n  coinSelectorDisable?: boolean;\n  showBalance?: boolean;\n  showMaxButton?: boolean;\n  autoFocus?: boolean;\n  isAllowed?: (values: NumberFormatValues) => boolean;\n  onChange?: (val: string) => void;\n  setMaxBalance?: () => void;\n};\n\nconst parseValue = (value: string) => {\n  return value === \".\" ? \"0.\" : value;\n};\n\nconst parseValueBigInt = (value: string) => {\n  if (value !== \"\") {\n    const _value = parseValue(value);\n    return parseUnits(_value, DECIMAL_UNITS).toBigInt();\n  }\n  return toBigInt(0);\n};\n\nconst formatValue = (amount: bigint | null | undefined) => {\n  if (amount != null) {\n    return formatUnits(amount, DECIMAL_UNITS);\n  } else if (!amount) {\n    return \"\";\n  }\n};\n\nexport function useCoinInput({\n  amount: initialAmount,\n  onChange,\n  isReadOnly,\n  showBalance = true,\n  coin,\n  gasFee,\n  onInput,\n  ...params\n}: UseCoinParams) {\n  const [amount, setAmount] = useState<bigint | null>(null);\n  const { data: balances } = useBalances({ enabled: showBalance });\n  const coinBalance = balances?.find((item) => item.assetId === coin?.assetId);\n\n  useEffect(() => {\n    if (initialAmount != null) setAmount(initialAmount);\n  }, [initialAmount]);\n\n  // TODO: consider real gas fee, replacing GAS_FEE variable.\n  // For now we need to keep 1 unit in the wallet(it's not spent) in order to complete \"create pool\" transaction.\n  function getSafeMaxBalance() {\n    const amount = coinBalance?.amount || BigInt(0);\n    return amount > BigInt(0) ? amount - (gasFee || BigInt(0)) : amount;\n  }\n\n  function getInputProps() {\n    return {\n      ...params,\n      coin,\n      isReadOnly,\n      value: formatValue(amount),\n      displayType: (isReadOnly ? \"text\" : \"input\") as DisplayType,\n      onInput,\n      onChange: (val: string) => {\n        if (isReadOnly) return;\n        const next = val !== \"\" ? parseValueBigInt(val) : null;\n        typeof onChange === \"function\" ? onChange(next) : setAmount(next);\n      },\n      isAllowed: ({ value }: NumberFormatValues) => {\n        return parseValueBigInt(value) <= MAX_U64_VALUE;\n      },\n      setMaxBalance: () => {\n        onInput?.();\n        setAmount(getSafeMaxBalance());\n      },\n      balance: formatValue(coinBalance?.amount || BigInt(0)),\n      showBalance,\n      showMaxButton: showBalance,\n    } as CoinInputParameters;\n  }\n\n  return {\n    amount,\n    formatted: formatValue(amount),\n    setAmount,\n    getInputProps,\n    hasEnoughBalance: getSafeMaxBalance() >= (amount || BigInt(0)),\n  };\n}\n\nexport const CoinInput = forwardRef<HTMLInputElement, CoinInputParameters>(\n  (\n    {\n      value: initialValue,\n      displayType,\n      onChange,\n      coin,\n      isAllowed,\n      onChangeCoin,\n      onInput,\n      isReadOnly,\n      coinSelectorDisabled,\n      showMaxButton,\n      showBalance,\n      setMaxBalance,\n      balance,\n      autoFocus,\n    },\n    ref\n  ) => {\n    const [value, setValue] = useState<string | undefined>(initialValue);\n\n    useEffect(() => {\n      if (initialValue) {\n        setValue(initialValue);\n      }\n    }, [initialValue]);\n\n    return (\n      <div className={style.transferPropContainer}>\n        <NumberFormat\n          autoFocus={autoFocus}\n          getInputRef={ref}\n          allowNegative={false}\n          defaultValue={initialValue}\n          value={value}\n          displayType={displayType}\n          isAllowed={isAllowed}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            onChange?.(e.target.value);\n            setValue(e.target.value);\n          }}\n          decimalScale={DECIMAL_UNITS}\n          placeholder=\"0\"\n          className={style.input}\n          thousandSeparator={false}\n          onInput={onInput}\n        />\n        <div className={style.rightWrapper}>\n          <CoinSelector\n            value={coin}\n            onChange={onChangeCoin}\n            isReadOnly={isReadOnly || coinSelectorDisabled}\n          />\n          {(showBalance || showMaxButton) && (\n            <div className=\"flex items-center gap-2 mt-2\">\n              {showBalance && (\n                <div className=\"text-xs text-gray-400\">Balance: {balance}</div>\n              )}\n              {showMaxButton && (\n                <Button\n                  size=\"sm\"\n                  onPress={setMaxBalance}\n                  className={style.maxButton}\n                  variant=\"ghost\"\n                >\n                  Max\n                </Button>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n","import { useQuery, UseQueryOptions } from 'react-query';\nimport { useWallet } from 'src/context/AppContext';\n\nexport function useBalances(opts: UseQueryOptions = {}) {\n  const wallet = useWallet();\n  return useQuery('AssetsPage-balances', () => wallet!.getBalances(), opts as any);\n}\n","export function Spinner() {\n  return (\n    <svg\n      className=\"-ml-1 h-5 w-5 animate-spin text-primary-500\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n    >\n      <circle\n        className=\"opacity-25\"\n        cx=\"12\"\n        cy=\"12\"\n        r=\"10\"\n        stroke=\"currentColor\"\n        strokeWidth=\"4\"\n      ></circle>\n      <path\n        className=\"opacity-75\"\n        fill=\"currentColor\"\n        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n      ></path>\n    </svg>\n  );\n}\n","import { Coin } from 'src/types';\nimport { CONTRACT_ID, TOKEN_ID } from 'src/config';\nimport { relativeUrl } from './utils';\n\nexport const ASSET_404 = {\n  name: '404',\n  img: relativeUrl('/icons/other.svg'),\n};\n\nconst CoinsMetadata: Array<Coin> = [\n  {\n    name: 'Ether',\n    symbol: 'ETH',\n    assetId: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    img: relativeUrl('/icons/eth.svg'),\n  },\n  {\n    name: 'DAI',\n    symbol: 'DAI',\n    // TODO: Remove this when adding dynamic token insertion\n    // Make temporarily easy to change token contract id\n    // https://github.com/FuelLabs/swayswap-demo/issues/33\n    assetId: TOKEN_ID,\n    img: relativeUrl('/icons/dai.svg'),\n  },\n  {\n    name: 'Sway',\n    symbol: 'SWAY',\n    // TODO: Remove this when adding dynamic token insertion\n    // Make temporarily easy to change token contract id\n    // https://github.com/FuelLabs/swayswap-demo/issues/33\n    assetId: CONTRACT_ID,\n    img: relativeUrl('/icons/sway.svg'),\n  },\n];\n\nexport default CoinsMetadata;\n","import urljoin from 'url-join';\n\nconst { PUBLIC_URL } = process.env;\n\nexport const objectId = (value: string) => ({\n  value,\n});\n\nexport const sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n\nexport const relativeUrl = (path: string) => urljoin(PUBLIC_URL, path);\n","import { toNumber } from \"fuels\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport classNames from \"classnames\";\nimport toast from \"react-hot-toast\";\n\nimport assets from \"src/lib/CoinsMetadata\";\nimport { Button } from \"src/components/Button\";\nimport { Coin } from \"src/types\";\nimport { CoinInput, useCoinInput } from \"src/components/CoinInput\";\nimport { DECIMAL_UNITS, ONE_ASSET } from \"src/config\";\nimport { formatUnits } from \"ethers/lib/utils\";\nimport { Pages } from \"src/types/pages\";\nimport { RiCheckFill } from \"react-icons/ri\";\nimport { Spinner } from \"src/components/Spinner\";\nimport { useContract } from \"src/context/AppContext\";\n\nconst style = {\n  wrapper: `w-screen flex flex-1 items-center justify-center pb-14`,\n  content: `bg-gray-800 w-[30rem] rounded-2xl p-4 m-2`,\n  formHeader: `px-2 flex items-center justify-between font-semibold text-xl`,\n  info: `font-mono my-4 px-4 py-3 text-sm text-slate-400 decoration-1 border border-dashed border-white/10 rounded-lg`,\n};\n\nfunction PoolLoader({\n  loading,\n  step,\n  steps,\n}: {\n  coinFrom: Coin;\n  coinTo: Coin;\n  loading: boolean;\n  step: number;\n  steps: string[];\n}) {\n  return (\n    <ul className=\"w-full rounded-lg border border-gray-600 text-gray-900\">\n      {steps.map((stepText, index) => (\n        <li\n          key={index}\n          className={classNames(\n            \"space-between flex w-full items-center border-b border-gray-600 px-6 py-2 text-white\",\n            {\n              \"rounded-t-lg\": index === 0,\n              \"bg-primary-500\": step === index && loading,\n              \"rounded-b-lg\": index === steps.length,\n            }\n          )}\n        >\n          <div className=\"flex-1\">{stepText}</div>\n          {step === index && loading && <Spinner />}\n          {step > index && <RiCheckFill />}\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default function AddLiquidity() {\n  const contract = useContract()!;\n  const navigate = useNavigate();\n\n  const [[coinFrom, coinTo], setCoins] = useState<[Coin, Coin]>([\n    assets[0],\n    assets[1],\n  ]);\n\n  const [stage, setStage] = useState(0);\n  const { data: poolInfo } = useQuery(\"PoolPage-poolInfo\", () =>\n    contract.callStatic.get_info()\n  );\n\n  const fromInput = useCoinInput({\n    coin: coinFrom,\n    onChangeCoin: (coin: Coin) => setCoins([coin, coinTo]),\n    gasFee: BigInt(1),\n  });\n\n  const toInput = useCoinInput({\n    coin: coinTo,\n    onChangeCoin: (coin: Coin) => setCoins([coin, coinTo]),\n  });\n\n  const addLiquidityMutation = useMutation(\n    async () => {\n      const fromAmount = fromInput.amount;\n      const toAmount = toInput.amount;\n\n      if (!fromAmount || !toAmount) return;\n\n      // TODO: Combine all transactions on single tx leverage by scripts\n      // https://github.com/FuelLabs/swayswap-demo/issues/42\n\n      // Deposit coins from\n      await contract.functions.deposit({\n        forward: [fromAmount, coinFrom.assetId],\n      });\n      setStage((s) => s + 1);\n      // Deposit coins to\n      await contract.functions.deposit({\n        forward: [toAmount, coinTo.assetId],\n      });\n      setStage((s) => s + 1);\n      // Create liquidity pool\n      await contract.functions.add_liquidity(1, toAmount, 1000, {\n        variableOutputs: 1,\n      });\n      setStage((s) => s + 1);\n    },\n    {\n      onSuccess: () => {\n        toast.success(\"New pool created!\");\n        navigate(Pages.wallet);\n      },\n      onError: (e: any) => {\n        const errors = e?.response?.errors;\n\n        if (errors.length) {\n          if (errors[0].message === \"enough coins could not be found\") {\n            toast.error(\n              \"Not enough balance in your wallet to create this pool.\"\n            );\n          }\n        }\n      },\n      onSettled: () => {\n        setStage(0);\n      },\n    }\n  );\n\n  const handleCreatePool = () => {\n    const fromAmount = fromInput.amount;\n    const toAmount = toInput.amount;\n\n    if (!fromAmount) {\n      throw new Error('\"fromAmount\" is required');\n    }\n    if (!toAmount) {\n      throw new Error('\"toAmount\" is required');\n    }\n\n    if (!fromInput.hasEnoughBalance) {\n      throw new Error(`Insufficient ${coinFrom.name} balance`);\n    }\n    if (!toInput.hasEnoughBalance) {\n      throw new Error(`Insufficient ${coinTo.name} balance`);\n    }\n\n    addLiquidityMutation.mutate();\n  };\n\n  return addLiquidityMutation.isLoading ? (\n    <div className=\"mt-6 mb-8 flex justify-center\">\n      <PoolLoader\n        steps={[\n          `Deposit: ${coinFrom.name}`,\n          `Deposit: ${coinTo.name}`,\n          `Provide liquidity`,\n          `Done`,\n        ]}\n        step={stage}\n        loading={addLiquidityMutation.isLoading}\n        coinFrom={coinFrom}\n        coinTo={coinTo}\n      />\n    </div>\n  ) : (\n    <>\n      <div className=\"mt-6 mb-4\">\n        <CoinInput\n          {...fromInput.getInputProps()}\n          autoFocus\n          coinSelectorDisabled={true}\n        />\n      </div>\n      <div className=\"mb-6\">\n        <CoinInput {...toInput.getInputProps()} coinSelectorDisabled={true} />\n      </div>\n      {poolInfo ? (\n        <div className={style.info}>\n          <h4 className=\"text-white mb-2 font-bold\">Reserves</h4>\n          <div className=\"flex\">\n            <div className=\"flex flex-col flex-1\">\n              <span>\n                ETH:{\" \"}\n                {formatUnits(poolInfo.eth_reserve, DECIMAL_UNITS).toString()}\n              </span>\n              <span>\n                DAI:{\" \"}\n                {formatUnits(poolInfo.token_reserve, DECIMAL_UNITS).toString()}\n              </span>\n            </div>\n            {poolInfo.eth_reserve > 0 && poolInfo.token_reserve > 0 ? (\n              <div className=\"flex flex-col\">\n                <span>\n                  <>\n                    ETH/DAI:{\" \"}\n                    {\n                      +(\n                        toNumber(ONE_ASSET * poolInfo.eth_reserve) /\n                        toNumber(poolInfo.token_reserve) /\n                        toNumber(ONE_ASSET)\n                      ).toFixed(6)\n                    }\n                  </>\n                </span>\n                <span>\n                  <>\n                    DAI/ETH:{\" \"}\n                    {\n                      +(\n                        toNumber(ONE_ASSET * poolInfo.token_reserve) /\n                        toNumber(poolInfo.eth_reserve) /\n                        toNumber(ONE_ASSET)\n                      ).toFixed(6)\n                    }\n                  </>\n                </span>\n              </div>\n            ) : null}\n          </div>\n        </div>\n      ) : null}\n      <Button\n        isDisabled={!fromInput.hasEnoughBalance || !toInput.hasEnoughBalance}\n        isFull\n        size=\"lg\"\n        variant=\"primary\"\n        onPress={handleCreatePool}\n      >\n        {!fromInput.hasEnoughBalance\n          ? `Insufficient ${coinFrom.name} balance`\n          : !toInput.hasEnoughBalance\n          ? `Insufficient ${coinTo.name} balance`\n          : \"Confirm\"}\n      </Button>\n    </>\n  );\n}\n"],"names":["style","Input","forwardRef","ref","className","props","innerRef","useRef","inputProps","useTextField","mergeRefs","cx","ListItem","item","state","onAction","isDisabled","disabledKeys","has","key","isFocused","selectionManager","focusedKey","menuItemProps","useMenuItem","rendered","Menu","focusOnMount","useTreeState","selectionMode","menuProps","useMenu","useEffect","current","focus","collection","map","CustomItem","Item","CoinsListDialog","onSelect","useState","value","setValue","filtered","CoinsMetadata","coin","Boolean","length","name","toLowerCase","includes","toLocaleLowerCase","hasResults","type","placeholder","onChange","src","img","alt","height","width","symbol","assetId","CoinSelector","isReadOnly","selected","setSelected","dialog","useDialogProps","Button","openButtonProps","size","Dialog","dialogProps","close","parseValueBigInt","_value","parseValue","parseUnits","DECIMAL_UNITS","toBigInt","formatValue","amount","formatUnits","useCoinInput","initialAmount","showBalance","gasFee","onInput","params","setAmount","opts","wallet","useWallet","useQuery","getBalances","useBalances","enabled","balances","data","coinBalance","find","getSafeMaxBalance","BigInt","formatted","getInputProps","displayType","val","next","isAllowed","setMaxBalance","balance","showMaxButton","hasEnoughBalance","CoinInput","initialValue","onChangeCoin","coinSelectorDisabled","autoFocus","getInputRef","allowNegative","defaultValue","e","target","decimalScale","thousandSeparator","onPress","variant","Spinner","xmlns","fill","viewBox","cy","r","stroke","strokeWidth","d","ASSET_404","relativeUrl","TOKEN_ID","CONTRACT_ID","objectId","sleep","ms","Promise","resolve","setTimeout","path","urljoin","process","PoolLoader","loading","step","steps","stepText","index","classNames","AddLiquidity","contract","useContract","navigate","useNavigate","assets","coinFrom","coinTo","setCoins","stage","setStage","poolInfo","callStatic","get_info","fromInput","toInput","addLiquidityMutation","useMutation","fromAmount","toAmount","functions","deposit","forward","s","add_liquidity","variableOutputs","onSuccess","toast","Pages","onError","errors","response","message","onSettled","isLoading","eth_reserve","toString","token_reserve","toNumber","ONE_ASSET","toFixed","isFull","Error","mutate"],"sourceRoot":""}