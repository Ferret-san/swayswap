{"version":3,"file":"static/js/388.a80c6be6.chunk.js","mappings":"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","sources":["components/Input.tsx","components/Menu.tsx","components/CoinsListDialog.tsx","components/CoinSelector.tsx","components/CoinInput.tsx","components/PageContent.tsx","hooks/useBalances.ts","lib/CoinsMetadata.ts","lib/utils.ts","pages/SwapPage/types.ts","pages/SwapPage/queries.ts","components/InvertButton.tsx","pages/SwapPage/jotai.ts","pages/SwapPage/SwapComponent.tsx","pages/SwapPage/index.tsx","hooks/useDebounce.tsx"],"sourcesContent":["import { AriaTextFieldOptions, useTextField } from \"@react-aria/textfield\";\nimport { FC, forwardRef, useRef } from \"react\";\nimport cx from \"classnames\";\nimport mergeRefs from \"react-merge-refs\";\n\nconst style = {\n  input: `appearance-none w-full rounded-md bg-gray-700 px-4 py-2 focus-ring text-gray-100`,\n};\n\ntype InputProps = AriaTextFieldOptions<\"input\"> & {\n  className?: string;\n};\n\nexport const Input: FC<InputProps> = forwardRef<HTMLInputElement, InputProps>(\n  ({ className, ...props }, ref) => {\n    const innerRef = useRef<HTMLInputElement | null>(null);\n    let { inputProps } = useTextField(props, innerRef);\n    return (\n      <input\n        ref={mergeRefs([innerRef, ref])}\n        className={cx(className, style.input)}\n        {...inputProps}\n      />\n    );\n  }\n);\n","import { ItemProps, Node } from \"@react-types/shared\";\nimport { useMenu, useMenuItem } from \"@react-aria/menu\";\nimport { useTreeState, TreeProps, TreeState } from \"@react-stately/tree\";\nimport { Item } from \"@react-stately/collections\";\nimport { FC, Key, useEffect, useRef } from \"react\";\n\ntype ListItemProps = {\n  item: Node<any>;\n  state: TreeState<any>;\n  onAction?: (key: Key) => void;\n  className?: string;\n};\n\nfunction ListItem({ item, state, onAction, className }: ListItemProps) {\n  // Get props for the menu item element\n  const ref = useRef<HTMLLIElement | null>(null);\n  const isDisabled = state.disabledKeys.has(item.key);\n  const isFocused = state.selectionManager.focusedKey === item.key;\n\n  const { menuItemProps } = useMenuItem(\n    {\n      key: item.key,\n      isDisabled,\n      onAction,\n    },\n    state,\n    ref\n  );\n\n  return (\n    <li\n      {...menuItemProps}\n      ref={ref}\n      className={className}\n      data-focused={isFocused}\n    >\n      {item.rendered}\n    </li>\n  );\n}\n\nexport type MenuProps = TreeProps<any> & {\n  onAction?: (key: Key) => void;\n  className?: string;\n  focusOnMount?: boolean;\n};\n\ntype MenuComponent = FC<MenuProps> & {\n  Item: typeof CustomItem;\n};\n\nexport const Menu: MenuComponent = ({\n  className,\n  onAction,\n  focusOnMount,\n  ...props\n}) => {\n  // Create state based on the incoming props\n  const state = useTreeState({ ...props, selectionMode: \"none\" });\n\n  // Get props for the menu element\n  const ref = useRef<HTMLUListElement | null>(null);\n  const { menuProps } = useMenu(props, state, ref);\n\n  useEffect(() => {\n    if (focusOnMount) {\n      ref.current?.focus();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <ul {...menuProps} ref={ref} className={className}>\n      {[...state.collection].map((item) => (\n        <ListItem\n          className={item.props.className}\n          key={item.key}\n          item={item}\n          state={state}\n          onAction={onAction}\n        />\n      ))}\n    </ul>\n  );\n};\n\ntype CustomItemComponent = FC<ItemProps<any> & { className?: string }>;\nconst CustomItem = Item as CustomItemComponent;\nMenu.Item = CustomItem;\n","import { useState } from \"react\";\nimport CoinsMetadata from \"src/lib/CoinsMetadata\";\nimport { Coin } from \"src/types\";\nimport { Input } from \"./Input\";\nimport { Menu } from \"./Menu\";\n\nconst style = {\n  input: `appearance-none w-full rounded-md bg-gray-700 px-4 py-2 focus-ring text-gray-100`,\n  coinItem: `py-2 px-6 flex items-center gap-3 border-t border-gray-700\n  hover:bg-gray-700/50 hover:cursor-pointer focus-ring`,\n  noResults: `px-6 py-4 border-t border-gray-700`,\n};\n\nexport type CoinListModalProps = {\n  onSelect?: (assetId: string) => void;\n};\n\nexport function CoinsListDialog({ onSelect }: CoinListModalProps) {\n  const [value, setValue] = useState(\"\");\n\n  function filterBySearch(coin: Coin) {\n    if (!Boolean(value.length)) return coin;\n    return coin.name?.toLowerCase().includes(value.toLocaleLowerCase());\n  }\n\n  const filtered = CoinsMetadata.filter(filterBySearch);\n  const hasResults = Boolean(filtered.length);\n\n  return (\n    <div>\n      <header className=\"py-4 px-6 pb-5\">\n        <h2 className=\"text-gray-50 text-lg mb-3\">Select a token</h2>\n        <Input\n          type=\"text\"\n          placeholder=\"Search by name...\"\n          value={value}\n          onChange={setValue}\n        />\n      </header>\n      {hasResults ? (\n        <Menu\n          onAction={(key) => onSelect?.(key as string)}\n          className=\"pb-2\"\n          focusOnMount\n        >\n          {filtered.map((coin) => (\n            <Menu.Item key={coin.assetId} className={style.coinItem}>\n              <img\n                className=\"rounded-full border-none ml-1\"\n                src={coin.img}\n                alt={coin.name}\n                height={30}\n                width={30}\n              />\n              <div className=\"flex flex-col\">\n                <div className=\"text-gray-50\">{coin.symbol}</div>\n                <div className=\"text-sm\">{coin.name}</div>\n              </div>\n            </Menu.Item>\n          ))}\n        </Menu>\n      ) : (\n        <div className={style.noResults}>😢 Oops, no token found!</div>\n      )}\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { FiChevronDown } from \"react-icons/fi\";\nimport CoinsMetadata from \"src/lib/CoinsMetadata\";\nimport { Coin } from \"src/types\";\n\nimport { Button } from \"./Button\";\nimport { CoinsListDialog } from \"./CoinsListDialog\";\nimport { Dialog, useDialogProps } from \"./Dialog\";\n\nconst style = {\n  currencySelector: `flex1`,\n};\n\ntype CoinSelectorProps = {\n  value?: Coin | null;\n  onChange?: (coin: Coin) => void;\n  isReadOnly?: boolean;\n};\n\nexport function CoinSelector({\n  value,\n  onChange,\n  isReadOnly,\n}: CoinSelectorProps) {\n  const [selected, setSelected] = useState<Coin | null>(null);\n  const dialog = useDialogProps();\n\n  useEffect(() => {\n    if (!value) return setSelected(null);\n    setSelected(value);\n  }, [value]);\n\n  function handleSelect(assetId: string) {\n    dialog.close();\n    setSelected(CoinsMetadata.find((coin) => coin.assetId === assetId)!);\n  }\n\n  return (\n    <div className={style.currencySelector}>\n      <Button\n        {...dialog.openButtonProps}\n        size=\"md\"\n        className=\"coin-selector\"\n        isDisabled={isReadOnly}\n      >\n        {selected && selected.img && (\n          <img\n            className=\"rounded-full border-none ml-1\"\n            src={selected.img}\n            alt={selected.name}\n            height={20}\n            width={20}\n          />\n        )}\n        <div className=\"ml-2\">{selected?.name}</div>\n        {!isReadOnly && <FiChevronDown className=\"text-gray-500\" />}\n      </Button>\n      <Dialog {...dialog.dialogProps}>\n        <Dialog.Content>\n          <CoinsListDialog onSelect={handleSelect} />\n        </Dialog.Content>\n      </Dialog>\n    </div>\n  );\n}\n","import { toBigInt } from \"fuels\";\nimport { formatUnits, parseUnits } from \"ethers/lib/utils\";\nimport { forwardRef, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport NumberFormat, { NumberFormatValues } from \"react-number-format\";\nimport { DECIMAL_UNITS } from \"src/config\";\nimport { CoinSelector } from \"./CoinSelector\";\nimport { Button } from \"./Button\";\nimport { Coin } from \"src/types\";\nimport { useBalances } from \"src/hooks/useBalances\";\n\n// Max value supported\nconst MAX_U64_VALUE = 0xffff_ffff_ffff_ffff;\n\nconst style = {\n  transferPropContainer: `flex bg-gray-700 rounded-2xl p-2 border border-gray-700`,\n  input: `mx-2 h-10 bg-transparent placeholder:text-gray-300 outline-none text-xl flex items-center`,\n  rightWrapper: `flex flex-1 flex-col items-end`,\n  maxButton: `text-xs py-0 px-1 h-auto bg-primary-800/60 text-primary-500 hover:bg-primary-800`,\n};\n\ntype UseCoinParams = {\n  amount?: bigint | null;\n  isReadOnly?: boolean;\n  coinSelectorDisabled?: boolean;\n  coin?: Coin | null;\n  gasFee?: bigint;\n  showBalance?: boolean;\n  onInput?: (...args: any) => void;\n  onChange?: (val: bigint | null) => void;\n  onChangeCoin?: (value: Coin) => void;\n};\n\ntype DisplayType = \"input\" | \"text\";\n\ntype CoinInputParameters = UseCoinParams & {\n  value: string;\n  balance?: string;\n  displayType: DisplayType;\n  isReadOnly?: boolean;\n  coinSelectorDisable?: boolean;\n  showBalance?: boolean;\n  showMaxButton?: boolean;\n  autoFocus?: boolean;\n  isAllowed?: (values: NumberFormatValues) => boolean;\n  onChange?: (val: string) => void;\n  setMaxBalance?: () => void;\n};\n\nconst parseValue = (value: string) => {\n  return value === \".\" ? \"0.\" : value;\n};\n\nconst parseValueBigInt = (value: string) => {\n  if (value !== \"\") {\n    const _value = parseValue(value);\n    return parseUnits(_value, DECIMAL_UNITS).toBigInt();\n  }\n  return toBigInt(0);\n};\n\nconst formatValue = (amount: bigint | null | undefined) => {\n  if (amount != null) {\n    return formatUnits(amount, DECIMAL_UNITS);\n  }\n  // If amount is null return empty string\n  return \"\";\n};\n\nexport function useCoinInput({\n  amount: initialAmount,\n  onChange,\n  isReadOnly,\n  showBalance = true,\n  coin,\n  gasFee,\n  onInput,\n  ...params\n}: UseCoinParams) {\n  const [amount, setAmount] = useState<bigint | null>(null);\n  const { data: balances } = useBalances({ enabled: showBalance });\n  const coinBalance = balances?.find((item) => item.assetId === coin?.assetId);\n\n  useEffect(() => {\n    // Enable value initialAmount to be null\n    if (initialAmount !== undefined) setAmount(initialAmount);\n  }, [initialAmount]);\n\n  // TODO: consider real gas fee, replacing GAS_FEE variable.\n  // For now we need to keep 1 unit in the wallet(it's not spent) in order to complete \"create pool\" transaction.\n  function getSafeMaxBalance() {\n    const amount = coinBalance?.amount || BigInt(0);\n    return amount > BigInt(0) ? amount - (gasFee || BigInt(0)) : amount;\n  }\n\n  function getInputProps() {\n    return {\n      ...params,\n      coin,\n      isReadOnly,\n      value: formatValue(amount),\n      displayType: (isReadOnly ? \"text\" : \"input\") as DisplayType,\n      onInput,\n      onChange: (val: string) => {\n        if (isReadOnly) return;\n        const next = val !== \"\" ? parseValueBigInt(val) : null;\n        typeof onChange === \"function\" ? onChange(next) : setAmount(next);\n      },\n      isAllowed: ({ value }: NumberFormatValues) => {\n        return parseValueBigInt(value) <= MAX_U64_VALUE;\n      },\n      setMaxBalance: () => {\n        onInput?.();\n        setAmount(getSafeMaxBalance());\n      },\n      balance: formatValue(coinBalance?.amount || BigInt(0)),\n      showBalance,\n      showMaxButton: showBalance,\n    } as CoinInputParameters;\n  }\n\n  return {\n    amount,\n    formatted: formatValue(amount),\n    setAmount,\n    getInputProps,\n    hasEnoughBalance: getSafeMaxBalance() >= (amount || BigInt(0)),\n  };\n}\n\nexport const CoinInput = forwardRef<HTMLInputElement, CoinInputParameters>(\n  (\n    {\n      value: initialValue,\n      displayType,\n      onChange,\n      coin,\n      isAllowed,\n      onChangeCoin,\n      onInput,\n      isReadOnly,\n      coinSelectorDisabled,\n      showMaxButton,\n      showBalance,\n      setMaxBalance,\n      balance,\n      autoFocus,\n    },\n    ref\n  ) => {\n    const [value, setValue] = useState<string | undefined>(initialValue);\n\n    useEffect(() => {\n      // Enable to clean field using empty string\n      if (initialValue != null) {\n        setValue(initialValue);\n      }\n    }, [initialValue]);\n\n    return (\n      <div className={style.transferPropContainer}>\n        <NumberFormat\n          autoFocus={autoFocus}\n          getInputRef={ref}\n          allowNegative={false}\n          defaultValue={initialValue}\n          value={value}\n          displayType={displayType}\n          isAllowed={isAllowed}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            onChange?.(e.target.value);\n            setValue(e.target.value);\n          }}\n          decimalScale={DECIMAL_UNITS}\n          placeholder=\"0\"\n          className={style.input}\n          thousandSeparator={false}\n          onInput={onInput}\n        />\n        <div className={style.rightWrapper}>\n          <CoinSelector\n            value={coin}\n            onChange={onChangeCoin}\n            isReadOnly={isReadOnly || coinSelectorDisabled}\n          />\n          {(showBalance || showMaxButton) && (\n            <div className=\"flex items-center gap-2 mt-2\">\n              {showBalance && (\n                <div className=\"text-xs text-gray-400\">Balance: {balance}</div>\n              )}\n              {showMaxButton && (\n                <Button\n                  size=\"sm\"\n                  onPress={setMaxBalance}\n                  className={style.maxButton}\n                  variant=\"ghost\"\n                >\n                  Max\n                </Button>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n","import classNames from \"classnames\";\nimport { Children, FC, ReactNode } from \"react\";\n\nconst style = {\n  divider: `border border-gray-700 border-b-0`,\n  wrapper: `w-screen flex flex-1 items-center justify-center pb-14`,\n  content: `bg-gray-800 w-[30rem] rounded-2xl py-4 m-2`,\n  titleWrapper: `px-5 flex justify-between text-xl`,\n  title: `flex items-center`,\n};\n\nexport type PageContentProps = {\n  children: ReactNode;\n};\n\nexport type PageTitleProps = {\n  children: ReactNode;\n  elementRight?: ReactNode;\n};\n\ntype PageContentComponent = FC<PageContentProps> & {\n  Title: FC<PageTitleProps>;\n};\n\nexport const PageContent: PageContentComponent = ({ children }) => {\n  const title = Children.toArray(children)?.find(\n    (child: any) => child.type?.id === \"PageTitle\"\n  );\n  const customChildren = Children.toArray(children)?.filter(\n    (child: any) => child.type?.id !== \"PageTitle\"\n  );\n  return (\n    <div className={style.wrapper}>\n      <div className={style.content}>\n        {title}\n        <div className={classNames(style.divider, \"my-4\")} />\n        <div className=\"px-5 pb-2\">{customChildren}</div>\n      </div>\n    </div>\n  );\n};\n\nconst PageTitle: FC<PageTitleProps> & { id: string } = ({\n  children,\n  elementRight,\n}) => {\n  return (\n    <div className={style.titleWrapper}>\n      <h2 className=\"flex items-center gap-2\">{children}</h2>\n      {elementRight}\n    </div>\n  );\n};\nPageTitle.id = \"PageTitle\";\n\nPageContent.Title = PageTitle;\n","import { useQuery, UseQueryOptions } from 'react-query';\nimport { useWallet } from 'src/context/AppContext';\n\nexport function useBalances(opts: UseQueryOptions = {}) {\n  const wallet = useWallet();\n  return useQuery('AssetsPage-balances', () => wallet!.getBalances(), opts as any);\n}\n","import { Coin } from 'src/types';\nimport { CONTRACT_ID, TOKEN_ID } from 'src/config';\nimport { relativeUrl } from './utils';\n\nexport const ASSET_404 = {\n  name: '404',\n  img: relativeUrl('/icons/other.svg'),\n};\n\nconst CoinsMetadata: Array<Coin> = [\n  {\n    name: 'Ether',\n    symbol: 'ETH',\n    assetId: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    img: relativeUrl('/icons/eth.svg'),\n  },\n  {\n    name: 'DAI',\n    symbol: 'DAI',\n    // TODO: Remove this when adding dynamic token insertion\n    // Make temporarily easy to change token contract id\n    // https://github.com/FuelLabs/swayswap-demo/issues/33\n    assetId: TOKEN_ID,\n    img: relativeUrl('/icons/dai.svg'),\n  },\n  {\n    name: 'Sway',\n    symbol: 'SWAY',\n    // TODO: Remove this when adding dynamic token insertion\n    // Make temporarily easy to change token contract id\n    // https://github.com/FuelLabs/swayswap-demo/issues/33\n    assetId: CONTRACT_ID,\n    img: relativeUrl('/icons/sway.svg'),\n  },\n];\n\nexport default CoinsMetadata;\n","import urljoin from 'url-join';\n\nconst { PUBLIC_URL } = process.env;\n\nexport const objectId = (value: string) => ({\n  value,\n});\n\nexport const sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n\nexport const relativeUrl = (path: string) => urljoin(PUBLIC_URL || '/', path);\n","export enum ActiveInput {\n  'from' = 'from',\n  'to' = 'to',\n}\n\nexport type SwapState = {\n  from: string;\n  to: string;\n  direction: ActiveInput;\n  amount: bigint | null;\n};\n","import { ExchangeContractAbi } from 'src/types/contracts';\nimport { ActiveInput, SwapState } from './types';\n\nconst getSwapWithMaximumRequiredAmount = async (\n  contract: ExchangeContractAbi,\n  assetId: string,\n  amount: bigint\n) => {\n  const requiredAmount = await contract.callStatic.get_swap_with_maximum(amount, {\n    forward: [0, assetId],\n  });\n  return requiredAmount;\n};\n\nconst getSwapWithMinimumMinAmount = async (\n  contract: ExchangeContractAbi,\n  assetId: string,\n  amount: bigint\n) => {\n  const minAmount = await contract.callStatic.get_swap_with_minimum(amount, {\n    forward: [0, assetId],\n  });\n  return minAmount;\n};\n\nexport const queryPreviewAmount = async (\n  contract: ExchangeContractAbi,\n  { amount, direction, from }: SwapState\n) => {\n  if (direction === ActiveInput.to && amount) {\n    const previewAmount = await getSwapWithMaximumRequiredAmount(contract, from, amount);\n    return previewAmount;\n  } else if (amount) {\n    const previewAmount = await getSwapWithMinimumMinAmount(contract, from, amount);\n    return previewAmount;\n  }\n  return null;\n};\n\nexport const swapTokens = async (\n  contract: ExchangeContractAbi,\n  { from, direction, amount }: SwapState\n) => {\n  const DEADLINE = 1000;\n  if (direction === ActiveInput.to && amount) {\n    const forwardAmount = await getSwapWithMaximumRequiredAmount(contract, from, amount);\n    if (!forwardAmount.has_liquidity) {\n      throw new Error('Not enough liquidity on pool');\n    }\n    await contract.functions.swap_with_maximum(amount, DEADLINE, {\n      forward: [forwardAmount.amount, from],\n      variableOutputs: 1,\n    });\n  } else if (direction === ActiveInput.from && amount) {\n    const minValue = await getSwapWithMinimumMinAmount(contract, from, amount);\n    if (!minValue.has_liquidity) {\n      throw new Error('Not enough liquidity on pool');\n    }\n    await contract.functions.swap_with_minimum(minValue.amount, DEADLINE, {\n      forward: [amount, from],\n      variableOutputs: 1,\n    });\n  }\n};\n","import { useState } from \"react\";\nimport { BsArrowDown, BsArrowUp } from \"react-icons/bs\";\nimport cx from \"classnames\";\nimport { Button } from \"./Button\";\n\nconst style = {\n  confirmButton: `\n    p-0 relative w-12 h-12\n    border-2 border-gray-700 bg-gray-800 rounded-2xl cursor-pointer\n    text-gray-400 hover:text-gray-50\n  `,\n  icon: `transition-all`,\n  iconLeft: `translate-x-[6px]`,\n  iconRight: `translate-x-[-6px]`,\n  rotate: `rotate-180`,\n};\n\nexport function InvertButton({ onClick }: { onClick: () => void }) {\n  const [isInverted, setInverted] = useState(false);\n\n  function handleClick() {\n    setInverted((s) => !s);\n    onClick?.();\n  }\n\n  return (\n    <Button\n      onPress={handleClick}\n      className={style.confirmButton}\n      aria-label=\"Invert coins\"\n    >\n      <BsArrowDown\n        size={24}\n        className={cx(style.icon, style.iconLeft, {\n          [style.rotate]: isInverted,\n        })}\n      />\n      <BsArrowUp\n        size={24}\n        className={cx(style.icon, style.iconRight, {\n          [style.rotate]: isInverted,\n        })}\n      />\n    </Button>\n  );\n}\n","import { atom } from 'jotai';\nimport assets from \"src/lib/CoinsMetadata\";\nimport { Coin } from 'src/types';\nimport { ActiveInput } from './types';\n\nexport const swapActiveInputAtom = atom<ActiveInput>(ActiveInput.from);\nexport const swapCoinsAtom = atom<[Coin, Coin]>([\n  assets[0],\n  assets[1],\n])\nexport const swapAmountAtom = atom<bigint | null>(null);\n","import { useAtom } from 'jotai';\nimport { useEffect, useRef } from \"react\";\nimport { CoinInput, useCoinInput } from \"src/components/CoinInput\";\nimport { InvertButton } from \"src/components/InvertButton\";\nimport { Coin } from \"src/types\";\nimport { swapActiveInputAtom, swapAmountAtom, swapCoinsAtom } from './jotai';\nimport { ActiveInput, SwapState } from './types';\n\nconst style = {\n  switchDirection: `flex items-center justify-center -my-5`,\n};\n\ntype SwapComponentProps = {\n  previewAmount?: bigint | null;\n  onChange?: (swapState: SwapState) => void;\n};\n\nexport function SwapComponent({\n  previewAmount: previewValue,\n  onChange,\n}: SwapComponentProps) {\n  const [initialAmount, setInitialAmount] = useAtom(swapAmountAtom);\n  const [initialActiveInput, setInitialActiveInput] = useAtom(swapActiveInputAtom);\n  const [[coinFrom, coinTo], setCoins] = useAtom(swapCoinsAtom);\n  const activeInput = useRef<ActiveInput>(initialActiveInput);\n\n  const handleInvertCoins = () => {\n    if (activeInput.current === ActiveInput.to) {\n      activeInput.current = ActiveInput.from;\n      fromInput.setAmount(toInput.amount);\n      toInput.setAmount(null);\n    } else {\n      activeInput.current = ActiveInput.to;\n      toInput.setAmount(fromInput.amount);\n      fromInput.setAmount(null);\n    }\n    setCoins([coinTo, coinFrom]);\n  };\n\n  const fromInput = useCoinInput({\n    coin: coinFrom,\n    onChangeCoin: (coin: Coin) => setCoins([coin, coinTo]),\n    onInput: () => (activeInput.current = ActiveInput.from),\n  });\n\n  const toInput = useCoinInput({\n    coin: coinTo,\n    onChangeCoin: (coin: Coin) => setCoins([coin, coinTo]),\n    onInput: () => (activeInput.current = ActiveInput.to),\n  });\n\n  useEffect(() => {\n    if (activeInput.current === ActiveInput.to) {\n      toInput.setAmount(initialAmount);\n    } else {\n      fromInput.setAmount(initialAmount);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const amount = activeInput.current === ActiveInput.from\n      ? fromInput.amount\n      : toInput.amount;\n\n    // Set value to hydrate\n    setInitialAmount(amount);\n    // Set current input\n    setInitialActiveInput(activeInput?.current);\n\n    // Call on onChange\n    onChange?.({\n      from: coinFrom.assetId,\n      to: coinTo.assetId,\n      amount,\n      direction: activeInput.current,\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fromInput.amount, toInput.amount, coinFrom, coinTo]);\n\n  useEffect(() => {\n    if (previewValue == null) return;\n    if (activeInput.current === ActiveInput.from) {\n      toInput.setAmount(previewValue);\n    } else {\n      fromInput.setAmount(previewValue);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [previewValue]);\n\n  return (\n    <>\n      <div className=\"mt-4\">\n        <CoinInput\n          {...fromInput.getInputProps()}\n          autoFocus\n          coinSelectorDisabled={true}\n        />\n      </div>\n      <div className={style.switchDirection}>\n        <InvertButton onClick={handleInvertCoins} />\n      </div>\n      <div className=\"mb-4\">\n        <CoinInput {...toInput.getInputProps()} coinSelectorDisabled={true} />\n      </div>\n    </>\n  );\n}\n","import { useMutation, useQuery } from \"react-query\";\nimport { useNavigate } from \"react-router-dom\";\nimport { MdSwapCalls } from \"react-icons/md\";\nimport { useState } from \"react\";\nimport toast from \"react-hot-toast\";\n\nimport { Button } from \"src/components/Button\";\nimport { PageContent } from \"src/components/PageContent\";\nimport { useContract } from \"src/context/AppContext\";\nimport useDebounce from \"src/hooks/useDebounce\";\nimport { Pages } from \"src/types/pages\";\nimport { sleep } from \"src/lib/utils\";\n\nimport { queryPreviewAmount, swapTokens } from \"./queries\";\nimport { SwapComponent } from \"./SwapComponent\";\nimport { ActiveInput, SwapState } from \"./types\";\nimport { useBalances } from \"src/hooks/useBalances\";\nimport { CoinQuantity } from \"fuels\";\n\nconst getBalanceAsset = (balances: CoinQuantity[] | undefined, assetId: string) => {\n  return balances?.find((item) => item.assetId === assetId);\n}\n\nexport default function SwapPage() {\n  const contract = useContract()!;\n  const [previewAmount, setPreviewAmount] = useState<bigint | null>(null);\n  const [swapState, setSwapState] = useState<SwapState | null>(null);\n  const [hasLiquidity, setHasLiquidity] = useState(true);\n  const debouncedState = useDebounce(swapState);\n  const { data: balances } = useBalances();\n  const navigate = useNavigate();\n\n  const { isLoading } = useQuery(\n    [\n      \"SwapPage-inactiveAmount\",\n      debouncedState?.amount?.toString(),\n      debouncedState?.direction,\n      debouncedState?.from,\n      debouncedState?.to,\n    ],\n    async () => {\n      if (!debouncedState?.amount) return null;\n      return queryPreviewAmount(contract, debouncedState);\n    },\n    {\n      onSuccess: (value) => {\n        if (value == null) return;\n        setPreviewAmount(value.amount);\n        setHasLiquidity(value.has_liquidity);\n      },\n    }\n  );\n  const { mutate: swap, isLoading: isSwaping } = useMutation(\n    async () => {\n      if (!swapState) return;\n      await swapTokens(contract, swapState);\n      await sleep(1000);\n    },\n    {\n      onSuccess: () => {\n        toast.success(\"Swap made successfully!\");\n        navigate(Pages.wallet);\n      },\n    }\n  );\n\n  const hasNotBalance = (\n    !swapState ||\n    !swapState.amount ||\n    !getBalanceAsset(balances, swapState.direction === ActiveInput.to ? swapState.to : swapState.from)\n  );\n  const shouldDisableButton =\n    isLoading ||\n    isSwaping ||\n    !hasLiquidity ||\n    !previewAmount ||\n    hasNotBalance;\n\n  const getButtonText = () => {\n    if (!hasLiquidity) return \"Insufficient liquidity\";\n    if (isSwaping) return \"Loading...\";\n    return \"Swap\";\n  };\n\n  return (\n    <PageContent>\n      <PageContent.Title>\n        <MdSwapCalls className=\"text-primary-500\" />\n        Swap\n      </PageContent.Title>\n      <SwapComponent previewAmount={previewAmount} onChange={setSwapState} />\n      <Button\n        isFull\n        size=\"lg\"\n        variant=\"primary\"\n        isDisabled={shouldDisableButton}\n        onPress={() => swap()}\n      >\n        {getButtonText()}\n      </Button>\n    </PageContent>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nexport default function useDebounce<T>(value: T, delay: number = 300) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n"],"names":["style","Input","forwardRef","ref","className","props","innerRef","useRef","inputProps","useTextField","mergeRefs","cx","ListItem","item","state","onAction","isDisabled","disabledKeys","has","key","isFocused","selectionManager","focusedKey","menuItemProps","useMenuItem","rendered","Menu","focusOnMount","useTreeState","selectionMode","menuProps","useMenu","useEffect","current","focus","collection","map","CustomItem","Item","CoinsListDialog","onSelect","useState","value","setValue","filtered","CoinsMetadata","coin","Boolean","length","name","toLowerCase","includes","toLocaleLowerCase","hasResults","type","placeholder","onChange","src","img","alt","height","width","symbol","assetId","CoinSelector","isReadOnly","selected","setSelected","dialog","useDialogProps","Button","openButtonProps","size","Dialog","dialogProps","close","parseValueBigInt","_value","parseValue","parseUnits","DECIMAL_UNITS","toBigInt","formatValue","amount","formatUnits","useCoinInput","initialAmount","showBalance","gasFee","onInput","params","setAmount","balances","useBalances","enabled","data","coinBalance","find","getSafeMaxBalance","BigInt","undefined","formatted","getInputProps","displayType","val","next","isAllowed","setMaxBalance","balance","showMaxButton","hasEnoughBalance","CoinInput","initialValue","onChangeCoin","coinSelectorDisabled","autoFocus","getInputRef","allowNegative","defaultValue","e","target","decimalScale","thousandSeparator","onPress","variant","PageContent","children","title","Children","child","id","customChildren","filter","classNames","PageTitle","elementRight","Title","opts","wallet","useWallet","useQuery","getBalances","ASSET_404","relativeUrl","TOKEN_ID","CONTRACT_ID","objectId","sleep","ms","Promise","resolve","setTimeout","path","urljoin","process","ActiveInput","getSwapWithMaximumRequiredAmount","contract","callStatic","get_swap_with_maximum","forward","requiredAmount","getSwapWithMinimumMinAmount","get_swap_with_minimum","minAmount","queryPreviewAmount","direction","from","to","previewAmount","swapTokens","DEADLINE","forwardAmount","has_liquidity","Error","functions","swap_with_maximum","variableOutputs","minValue","swap_with_minimum","InvertButton","onClick","isInverted","setInverted","s","swapActiveInputAtom","atom","swapCoinsAtom","assets","swapAmountAtom","SwapComponent","previewValue","useAtom","setInitialAmount","initialActiveInput","setInitialActiveInput","coinFrom","coinTo","setCoins","activeInput","fromInput","toInput","SwapPage","useContract","setPreviewAmount","swapState","setSwapState","hasLiquidity","setHasLiquidity","debouncedState","delay","debouncedValue","setDebouncedValue","handler","clearTimeout","useDebounce","navigate","useNavigate","isLoading","toString","onSuccess","useMutation","toast","Pages","swap","mutate","isSwaping","hasNotBalance","getBalanceAsset","shouldDisableButton","isFull"],"sourceRoot":""}