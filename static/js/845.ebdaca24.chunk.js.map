{"version":3,"file":"static/js/845.ebdaca24.chunk.js","mappings":"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","sources":["components/Input.tsx","components/Menu.tsx","components/CoinsListDialog.tsx","components/CoinSelector.tsx","components/CoinInput.tsx","hooks/useBalances.ts","components/Link.tsx","components/PageContent.tsx","components/Spinner.tsx","lib/CoinsMetadata.ts","lib/utils.ts","components/AssetItem.tsx","hooks/useFaucet.ts","components/WalletCard.tsx","hooks/useAssets.ts","pages/WalletPage.tsx"],"sourcesContent":["import { AriaTextFieldOptions, useTextField } from \"@react-aria/textfield\";\nimport { FC, forwardRef, useRef } from \"react\";\nimport cx from \"classnames\";\nimport mergeRefs from \"react-merge-refs\";\n\nconst style = {\n  input: `appearance-none w-full rounded-md bg-gray-700 px-4 py-2 focus-ring text-gray-100`,\n};\n\ntype InputProps = AriaTextFieldOptions<\"input\"> & {\n  className?: string;\n};\n\nexport const Input: FC<InputProps> = forwardRef<HTMLInputElement, InputProps>(\n  ({ className, ...props }, ref) => {\n    const innerRef = useRef<HTMLInputElement | null>(null);\n    let { inputProps } = useTextField(props, innerRef);\n    return (\n      <input\n        ref={mergeRefs([innerRef, ref])}\n        className={cx(className, style.input)}\n        {...inputProps}\n      />\n    );\n  }\n);\n","import { ItemProps, Node } from \"@react-types/shared\";\nimport { useMenu, useMenuItem } from \"@react-aria/menu\";\nimport { useTreeState, TreeProps, TreeState } from \"@react-stately/tree\";\nimport { Item } from \"@react-stately/collections\";\nimport { FC, Key, useEffect, useRef } from \"react\";\n\ntype ListItemProps = {\n  item: Node<any>;\n  state: TreeState<any>;\n  onAction?: (key: Key) => void;\n  className?: string;\n};\n\nfunction ListItem({ item, state, onAction, className }: ListItemProps) {\n  // Get props for the menu item element\n  const ref = useRef<HTMLLIElement | null>(null);\n  const isDisabled = state.disabledKeys.has(item.key);\n  const isFocused = state.selectionManager.focusedKey === item.key;\n\n  const { menuItemProps } = useMenuItem(\n    {\n      key: item.key,\n      isDisabled,\n      onAction,\n    },\n    state,\n    ref\n  );\n\n  return (\n    <li\n      {...menuItemProps}\n      ref={ref}\n      className={className}\n      data-focused={isFocused}\n    >\n      {item.rendered}\n    </li>\n  );\n}\n\nexport type MenuProps = TreeProps<any> & {\n  onAction?: (key: Key) => void;\n  className?: string;\n  focusOnMount?: boolean;\n};\n\ntype MenuComponent = FC<MenuProps> & {\n  Item: typeof CustomItem;\n};\n\nexport const Menu: MenuComponent = ({\n  className,\n  onAction,\n  focusOnMount,\n  ...props\n}) => {\n  // Create state based on the incoming props\n  const state = useTreeState({ ...props, selectionMode: \"none\" });\n\n  // Get props for the menu element\n  const ref = useRef<HTMLUListElement | null>(null);\n  const { menuProps } = useMenu(props, state, ref);\n\n  useEffect(() => {\n    if (focusOnMount) {\n      ref.current?.focus();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <ul {...menuProps} ref={ref} className={className}>\n      {[...state.collection].map((item) => (\n        <ListItem\n          className={item.props.className}\n          key={item.key}\n          item={item}\n          state={state}\n          onAction={onAction}\n        />\n      ))}\n    </ul>\n  );\n};\n\ntype CustomItemComponent = FC<ItemProps<any> & { className?: string }>;\nconst CustomItem = Item as CustomItemComponent;\nMenu.Item = CustomItem;\n","import { useState } from \"react\";\nimport CoinsMetadata from \"src/lib/CoinsMetadata\";\nimport { Coin } from \"src/types\";\nimport { Input } from \"./Input\";\nimport { Menu } from \"./Menu\";\n\nconst style = {\n  input: `appearance-none w-full rounded-md bg-gray-700 px-4 py-2 focus-ring text-gray-100`,\n  coinItem: `py-2 px-6 flex items-center gap-3 border-t border-gray-700\n  hover:bg-gray-700/50 hover:cursor-pointer focus-ring`,\n  noResults: `px-6 py-4 border-t border-gray-700`,\n};\n\nexport type CoinListModalProps = {\n  onSelect?: (assetId: string) => void;\n};\n\nexport function CoinsListDialog({ onSelect }: CoinListModalProps) {\n  const [value, setValue] = useState(\"\");\n\n  function filterBySearch(coin: Coin) {\n    if (!Boolean(value.length)) return coin;\n    return coin.name?.toLowerCase().includes(value.toLocaleLowerCase());\n  }\n\n  const filtered = CoinsMetadata.filter(filterBySearch);\n  const hasResults = Boolean(filtered.length);\n\n  return (\n    <div>\n      <header className=\"py-4 px-6 pb-5\">\n        <h2 className=\"text-gray-50 text-lg mb-3\">Select a token</h2>\n        <Input\n          type=\"text\"\n          placeholder=\"Search by name...\"\n          value={value}\n          onChange={setValue}\n        />\n      </header>\n      {hasResults ? (\n        <Menu\n          onAction={(key) => onSelect?.(key as string)}\n          className=\"pb-2\"\n          focusOnMount\n        >\n          {filtered.map((coin) => (\n            <Menu.Item key={coin.assetId} className={style.coinItem}>\n              <img\n                className=\"rounded-full border-none ml-1\"\n                src={coin.img}\n                alt={coin.name}\n                height={30}\n                width={30}\n              />\n              <div className=\"flex flex-col\">\n                <div className=\"text-gray-50\">{coin.symbol}</div>\n                <div className=\"text-sm\">{coin.name}</div>\n              </div>\n            </Menu.Item>\n          ))}\n        </Menu>\n      ) : (\n        <div className={style.noResults}>😢 Oops, no token found!</div>\n      )}\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { FiChevronDown } from \"react-icons/fi\";\nimport CoinsMetadata from \"src/lib/CoinsMetadata\";\nimport { Coin } from \"src/types\";\n\nimport { Button } from \"./Button\";\nimport { CoinsListDialog } from \"./CoinsListDialog\";\nimport { Dialog, useDialogProps } from \"./Dialog\";\n\nconst style = {\n  currencySelector: `flex1`,\n};\n\ntype CoinSelectorProps = {\n  value?: Coin | null;\n  onChange?: (coin: Coin) => void;\n  isReadOnly?: boolean;\n};\n\nexport function CoinSelector({\n  value,\n  onChange,\n  isReadOnly,\n}: CoinSelectorProps) {\n  const [selected, setSelected] = useState<Coin | null>(null);\n  const dialog = useDialogProps();\n\n  useEffect(() => {\n    if (!value) return setSelected(null);\n    setSelected(value);\n  }, [value]);\n\n  function handleSelect(assetId: string) {\n    dialog.close();\n    setSelected(CoinsMetadata.find((coin) => coin.assetId === assetId)!);\n  }\n\n  return (\n    <div className={style.currencySelector}>\n      <Button\n        {...dialog.openButtonProps}\n        size=\"md\"\n        className=\"coin-selector\"\n        isDisabled={isReadOnly}\n      >\n        {selected && selected.img && (\n          <img\n            className=\"rounded-full border-none ml-1\"\n            src={selected.img}\n            alt={selected.name}\n            height={20}\n            width={20}\n          />\n        )}\n        <div className=\"ml-2\">{selected?.name}</div>\n        {!isReadOnly && <FiChevronDown className=\"text-gray-500\" />}\n      </Button>\n      <Dialog {...dialog.dialogProps}>\n        <Dialog.Content>\n          <CoinsListDialog onSelect={handleSelect} />\n        </Dialog.Content>\n      </Dialog>\n    </div>\n  );\n}\n","import { toBigInt } from \"fuels\";\nimport { formatUnits, parseUnits } from \"ethers/lib/utils\";\nimport { forwardRef, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport NumberFormat, { NumberFormatValues } from \"react-number-format\";\nimport { DECIMAL_UNITS } from \"src/config\";\nimport { CoinSelector } from \"./CoinSelector\";\nimport { Button } from \"./Button\";\nimport { Coin } from \"src/types\";\nimport { useBalances } from \"src/hooks/useBalances\";\n\n// Max value supported\nconst MAX_U64_VALUE = 0xffff_ffff_ffff_ffff;\n\nconst style = {\n  transferPropContainer: `flex bg-gray-700 rounded-2xl p-2 border border-gray-700`,\n  input: `mx-2 h-10 bg-transparent placeholder:text-gray-300 outline-none text-xl flex items-center`,\n  rightWrapper: `flex flex-1 flex-col items-end`,\n  maxButton: `text-xs py-0 px-1 h-auto bg-primary-800/60 text-primary-500 hover:bg-primary-800`,\n};\n\ntype UseCoinParams = {\n  amount?: bigint | null;\n  isReadOnly?: boolean;\n  coinSelectorDisabled?: boolean;\n  coin?: Coin | null;\n  gasFee?: bigint;\n  showBalance?: boolean;\n  onInput?: (...args: any) => void;\n  onChange?: (val: bigint | null) => void;\n  onChangeCoin?: (value: Coin) => void;\n};\n\ntype DisplayType = \"input\" | \"text\";\n\ntype CoinInputParameters = UseCoinParams & {\n  value: string;\n  balance?: string;\n  displayType: DisplayType;\n  isReadOnly?: boolean;\n  coinSelectorDisable?: boolean;\n  showBalance?: boolean;\n  showMaxButton?: boolean;\n  autoFocus?: boolean;\n  isAllowed?: (values: NumberFormatValues) => boolean;\n  onChange?: (val: string) => void;\n  setMaxBalance?: () => void;\n};\n\nconst parseValue = (value: string) => {\n  return value === \".\" ? \"0.\" : value;\n};\n\nconst parseValueBigInt = (value: string) => {\n  if (value !== \"\") {\n    const _value = parseValue(value);\n    return parseUnits(_value, DECIMAL_UNITS).toBigInt();\n  }\n  return toBigInt(0);\n};\n\nconst formatValue = (amount: bigint | null | undefined) => {\n  if (amount != null) {\n    return formatUnits(amount, DECIMAL_UNITS);\n  } else if (!amount) {\n    return \"\";\n  }\n};\n\nexport function useCoinInput({\n  amount: initialAmount,\n  onChange,\n  isReadOnly,\n  showBalance = true,\n  coin,\n  gasFee,\n  onInput,\n  ...params\n}: UseCoinParams) {\n  const [amount, setAmount] = useState<bigint | null>(null);\n  const { data: balances } = useBalances({ enabled: showBalance });\n  const coinBalance = balances?.find((item) => item.assetId === coin?.assetId);\n\n  useEffect(() => {\n    if (initialAmount != null) setAmount(initialAmount);\n  }, [initialAmount]);\n\n  // TODO: consider real gas fee, replacing GAS_FEE variable.\n  // For now we need to keep 1 unit in the wallet(it's not spent) in order to complete \"create pool\" transaction.\n  function getSafeMaxBalance() {\n    const amount = coinBalance?.amount || BigInt(0);\n    return amount > BigInt(0) ? amount - (gasFee || BigInt(0)) : amount;\n  }\n\n  function getInputProps() {\n    return {\n      ...params,\n      coin,\n      isReadOnly,\n      value: formatValue(amount),\n      displayType: (isReadOnly ? \"text\" : \"input\") as DisplayType,\n      onInput,\n      onChange: (val: string) => {\n        if (isReadOnly) return;\n        const next = val !== \"\" ? parseValueBigInt(val) : null;\n        typeof onChange === \"function\" ? onChange(next) : setAmount(next);\n      },\n      isAllowed: ({ value }: NumberFormatValues) => {\n        return parseValueBigInt(value) <= MAX_U64_VALUE;\n      },\n      setMaxBalance: () => {\n        onInput?.();\n        setAmount(getSafeMaxBalance());\n      },\n      balance: formatValue(coinBalance?.amount || BigInt(0)),\n      showBalance,\n      showMaxButton: showBalance,\n    } as CoinInputParameters;\n  }\n\n  return {\n    amount,\n    formatted: formatValue(amount),\n    setAmount,\n    getInputProps,\n    hasEnoughBalance: getSafeMaxBalance() >= (amount || BigInt(0)),\n  };\n}\n\nexport const CoinInput = forwardRef<HTMLInputElement, CoinInputParameters>(\n  (\n    {\n      value: initialValue,\n      displayType,\n      onChange,\n      coin,\n      isAllowed,\n      onChangeCoin,\n      onInput,\n      isReadOnly,\n      coinSelectorDisabled,\n      showMaxButton,\n      showBalance,\n      setMaxBalance,\n      balance,\n      autoFocus,\n    },\n    ref\n  ) => {\n    const [value, setValue] = useState<string | undefined>(initialValue);\n\n    useEffect(() => {\n      if (initialValue) {\n        setValue(initialValue);\n      }\n    }, [initialValue]);\n\n    return (\n      <div className={style.transferPropContainer}>\n        <NumberFormat\n          autoFocus={autoFocus}\n          getInputRef={ref}\n          allowNegative={false}\n          defaultValue={initialValue}\n          value={value}\n          displayType={displayType}\n          isAllowed={isAllowed}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            onChange?.(e.target.value);\n            setValue(e.target.value);\n          }}\n          decimalScale={DECIMAL_UNITS}\n          placeholder=\"0\"\n          className={style.input}\n          thousandSeparator={false}\n          onInput={onInput}\n        />\n        <div className={style.rightWrapper}>\n          <CoinSelector\n            value={coin}\n            onChange={onChangeCoin}\n            isReadOnly={isReadOnly || coinSelectorDisabled}\n          />\n          {(showBalance || showMaxButton) && (\n            <div className=\"flex items-center gap-2 mt-2\">\n              {showBalance && (\n                <div className=\"text-xs text-gray-400\">Balance: {balance}</div>\n              )}\n              {showMaxButton && (\n                <Button\n                  size=\"sm\"\n                  onPress={setMaxBalance}\n                  className={style.maxButton}\n                  variant=\"ghost\"\n                >\n                  Max\n                </Button>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n","import { useQuery, UseQueryOptions } from 'react-query';\nimport { useWallet } from 'src/context/AppContext';\n\nexport function useBalances(opts: UseQueryOptions = {}) {\n  const wallet = useWallet();\n  return useQuery('AssetsPage-balances', () => wallet!.getBalances(), opts as any);\n}\n","import { useButton } from \"@react-aria/button\";\nimport { ReactNode, useRef } from \"react\";\nimport { AriaButtonProps } from \"@react-types/button\";\nimport cx from \"classnames\";\n\nexport type LinkProps = AriaButtonProps<\"a\"> & {\n  href?: string;\n  children: ReactNode;\n  isExternal?: boolean;\n  className?: string;\n};\n\nexport function Link({\n  href,\n  isExternal,\n  className,\n  children,\n  ...props\n}: LinkProps) {\n  const ref = useRef<HTMLAnchorElement | null>(null);\n  const { buttonProps, isPressed } = useButton(\n    { ...props, elementType: \"a\" },\n    ref\n  );\n\n  return (\n    <a\n      {...buttonProps}\n      {...(href && { href })}\n      ref={ref}\n      className={cx(className, \"link\")}\n      data-pressed={isPressed}\n      {...(isExternal && { target: \"_blank\", rel: \"noopener noreferrer\" })}\n    >\n      {children}\n    </a>\n  );\n}\n","import classNames from \"classnames\";\nimport { Children, FC, ReactNode } from \"react\";\n\nconst style = {\n  divider: `border border-gray-700 border-b-0`,\n  wrapper: `w-screen flex flex-1 items-center justify-center pb-14`,\n  content: `bg-gray-800 w-[30rem] rounded-2xl py-4 m-2`,\n  titleWrapper: `px-5 flex justify-between text-xl`,\n  title: `flex items-center`,\n};\n\nexport type PageContentProps = {\n  children: ReactNode;\n};\n\nexport type PageTitleProps = {\n  children: ReactNode;\n  elementRight?: ReactNode;\n};\n\ntype PageContentComponent = FC<PageContentProps> & {\n  Title: FC<PageTitleProps>;\n};\n\nexport const PageContent: PageContentComponent = ({ children }) => {\n  const title = Children.toArray(children)?.find(\n    (child: any) => child.type?.id === \"PageTitle\"\n  );\n  const customChildren = Children.toArray(children)?.filter(\n    (child: any) => child.type?.id !== \"PageTitle\"\n  );\n  return (\n    <div className={style.wrapper}>\n      <div className={style.content}>\n        {title}\n        <div className={classNames(style.divider, \"my-4\")} />\n        <div className=\"px-5 pb-2\">{customChildren}</div>\n      </div>\n    </div>\n  );\n};\n\nconst PageTitle: FC<PageTitleProps> & { id: string } = ({\n  children,\n  elementRight,\n}) => {\n  return (\n    <div className={style.titleWrapper}>\n      <h2 className=\"flex items-center gap-2\">{children}</h2>\n      {elementRight}\n    </div>\n  );\n};\nPageTitle.id = \"PageTitle\";\n\nPageContent.Title = PageTitle;\n","export function Spinner() {\n  return (\n    <svg\n      className=\"-ml-1 h-5 w-5 animate-spin text-primary-500\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n    >\n      <circle\n        className=\"opacity-25\"\n        cx=\"12\"\n        cy=\"12\"\n        r=\"10\"\n        stroke=\"currentColor\"\n        strokeWidth=\"4\"\n      ></circle>\n      <path\n        className=\"opacity-75\"\n        fill=\"currentColor\"\n        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n      ></path>\n    </svg>\n  );\n}\n","import { Coin } from 'src/types';\nimport { CONTRACT_ID, TOKEN_ID } from 'src/config';\n\nconst CoinsMetadata: Array<Coin> = [\n  {\n    name: 'Ether',\n    symbol: 'ETH',\n    assetId: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    img: '/icons/eth.svg',\n  },\n  {\n    name: 'DAI',\n    symbol: 'DAI',\n    // TODO: Remove this when adding dynamic token insertion\n    // Make temporarily easy to change token contract id\n    // https://github.com/FuelLabs/swayswap-demo/issues/33\n    assetId: TOKEN_ID,\n    img: '/icons/dai.svg',\n  },\n  {\n    name: 'Sway',\n    symbol: 'SWAY',\n    // TODO: Remove this when adding dynamic token insertion\n    // Make temporarily easy to change token contract id\n    // https://github.com/FuelLabs/swayswap-demo/issues/33\n    assetId: CONTRACT_ID,\n    img: '/icons/sway.svg',\n  },\n];\n\nexport default CoinsMetadata;\n","export const objectId = (value: string) => ({\n  value,\n});\n\nexport const sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n","import { Coin } from \"src/types\";\nimport { CoinInput, useCoinInput } from \"./CoinInput\";\n\ntype Asset = Coin & { amount: bigint };\ntype AssetItemProps = {\n  coin: Asset;\n};\n\nexport function AssetItem({ coin }: AssetItemProps) {\n  const input = useCoinInput({\n    coin,\n    amount: coin.amount,\n    isReadOnly: true,\n  });\n\n  return (\n    <CoinInput\n      {...input.getInputProps()}\n      showBalance={false}\n      showMaxButton={false}\n    />\n  );\n}\n","import { MutationOptions, useMutation } from 'react-query';\nimport { useAppContext } from 'src/context/AppContext';\nimport { sleep } from 'src/lib/utils';\n\nexport function useFaucet(opts: MutationOptions = {}) {\n  const { faucet } = useAppContext();\n\n  return useMutation(async () => {\n    await faucet();\n    await sleep(1000);\n  }, opts);\n}\n","import { ReactNode } from \"react\";\nimport { FaFaucet, FaRegCopy } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport clipboard from \"clipboard\";\nimport toast from \"react-hot-toast\";\n\nimport { ENABLE_FAUCET_API } from \"src/config\";\nimport { useWallet } from \"src/context/AppContext\";\nimport { BiWallet } from \"react-icons/bi\";\nimport { Spinner } from \"src/components/Spinner\";\nimport { Pages } from \"src/types/pages\";\nimport { Button } from \"src/components/Button\";\nimport { useFaucet } from \"src/hooks/useFaucet\";\n\nimport { PageContent } from \"./PageContent\";\n\nexport type WalletPropsCard = {\n  children: ReactNode;\n  onFaucetAdded?: () => void;\n};\n\nexport function WalletCard({ children, onFaucetAdded }: WalletPropsCard) {\n  const wallet = useWallet();\n\n  const faucetMutation = useFaucet({\n    onSuccess: () => {\n      toast.success(\"Faucet added successfully!\");\n      onFaucetAdded?.();\n    },\n  });\n\n  const handleCopy = () => {\n    clipboard.copy(wallet!.address);\n    toast(\"Address copied\", { icon: \"✨\" });\n  };\n\n  const titleElementRight = wallet && (\n    <div className=\"flex items-center gap-3\">\n      {ENABLE_FAUCET_API ? (\n        <Link to={Pages.faucet}>\n          <FaFaucet />\n        </Link>\n      ) : (\n        <>\n          {faucetMutation.isLoading ? (\n            <div className=\"flex justify-center rounded-xl p-1\">\n              <Spinner />\n            </div>\n          ) : (\n            <Button variant=\"ghost\" onPress={() => faucetMutation.mutate()}>\n              <FaFaucet size=\"1.2rem\" />\n            </Button>\n          )}\n        </>\n      )}\n    </div>\n  );\n\n  return (\n    <PageContent>\n      <PageContent.Title elementRight={titleElementRight}>\n        <div className=\"flex items-center gap-2 mr-2\">\n          <BiWallet className=\"text-primary-500\" />\n          Wallet\n        </div>\n        {wallet && (\n          <Button aria-label=\"Copy your wallet address\" onPress={handleCopy}>\n            <span className=\"text-gray-100\">\n              {wallet?.address.slice(0, 4)}...{wallet?.address.slice(-4)}\n            </span>\n            <FaRegCopy size=\"1em\" />\n          </Button>\n        )}\n      </PageContent.Title>\n      {children}\n    </PageContent>\n  );\n}\n","import { useWallet } from 'src/context/AppContext';\nimport { CoinQuantity, toBigInt } from 'fuels';\nimport { Coin } from 'src/types';\nimport CoinsMetadata from 'src/lib/CoinsMetadata';\nimport { useQuery } from 'react-query';\nimport urljoin from 'url-join';\n\nconst { PUBLIC_URL } = process.env;\n\ntype Asset = Coin & { amount: bigint };\nconst mergeCoinsWithMetadata = (coins: CoinQuantity[] = []): Array<Asset> => {\n  return coins.map((coin) => {\n    const coinMetadata = CoinsMetadata.find((c) => c.assetId === coin.assetId);\n    return {\n      // TODO: Create default Coin Metadata when token didn't have registered data\n      // Another options could be querying from the contract\n      // https://github.com/FuelLabs/swayswap-demo/issues/33\n      name: coinMetadata?.name || '404',\n      img: urljoin(PUBLIC_URL, coinMetadata?.img || '/icons/other.svg'),\n      assetId: coin.assetId,\n      amount: toBigInt(coin.amount || 0),\n    };\n  });\n};\n\nexport function useAssets() {\n  const wallet = useWallet();\n\n  const {\n    isLoading,\n    data: balances,\n    refetch,\n  } = useQuery('AssetsPage-balances', () => wallet?.getBalances());\n\n  const coins = mergeCoinsWithMetadata(balances);\n  return { coins, refetch, isLoading };\n}\n","import toast from \"react-hot-toast\";\nimport { useMutation } from \"react-query\";\n\nimport { useAppContext, useWallet } from \"src/context/AppContext\";\nimport { Spinner } from \"src/components/Spinner\";\nimport { AssetItem } from \"src/components/AssetItem\";\nimport { WalletCard } from \"src/components/WalletCard\";\nimport { Button } from \"src/components/Button\";\nimport { useAssets } from \"src/hooks/useAssets\";\nimport { useFaucet } from \"src/hooks/useFaucet\";\nimport { Link } from \"src/components/Link\";\n\nconst style = {\n  sectionTitle: `flex items-center justify-between font-semibold text-xl mb-2`,\n};\n\nexport default function WalletPage() {\n  const wallet = useWallet();\n  const { createWallet } = useAppContext();\n  const { coins, isLoading, refetch } = useAssets();\n  const faucet = useFaucet({\n    onSuccess: () => {\n      refetch();\n    },\n  });\n\n  const createWalletMutation = useMutation(async () => createWallet(), {\n    onSuccess: () => {\n      toast.success(\"Wallet created successfully!\");\n    },\n  });\n\n  function handleCreateWallet() {\n    createWalletMutation.mutate();\n  }\n\n  if (!wallet) {\n    return (\n      <WalletCard>\n        <div className=\"flex flex-col justify-center text-gray-400 prose text-center\">\n          <h3 className=\"text-gray-300 mb-0\">⚡️ Welcome SwaySwap</h3>\n          <p>\n            Seems you don&apos; have any wallet yet\n            <br /> Click bellow to generate one\n          </p>\n          <div>\n            <Button variant=\"primary\" size=\"lg\" onPress={handleCreateWallet}>\n              Connect Wallet\n            </Button>\n          </div>\n        </div>\n      </WalletCard>\n    );\n  }\n\n  return (\n    <WalletCard onFaucetAdded={refetch}>\n      <div className={style.sectionTitle}>Assets</div>\n      {isLoading && (\n        <div className=\"flex justify-start rounded-xl px-2 pt-2\">\n          <Spinner />\n        </div>\n      )}\n      {coins.map((coin) => {\n        return (\n          <div className=\"mt-4\" key={coin.assetId}>\n            <AssetItem key={coin.assetId} coin={coin} />\n          </div>\n        );\n      })}\n      {!isLoading && !Boolean(coins.length) && (\n        <div className=\"text-gray-500 pb-1\">\n          There&apos; no asset added yet.\n          <br />\n          <Link onPress={() => faucet.mutate()}>Click here</Link> to generate a\n          new asset.\n        </div>\n      )}\n    </WalletCard>\n  );\n}\n"],"names":["style","Input","forwardRef","ref","className","props","innerRef","useRef","inputProps","useTextField","mergeRefs","cx","ListItem","item","state","onAction","isDisabled","disabledKeys","has","key","isFocused","selectionManager","focusedKey","menuItemProps","useMenuItem","rendered","Menu","focusOnMount","useTreeState","selectionMode","menuProps","useMenu","useEffect","current","focus","collection","map","CustomItem","Item","CoinsListDialog","onSelect","useState","value","setValue","filtered","CoinsMetadata","coin","Boolean","length","name","toLowerCase","includes","toLocaleLowerCase","hasResults","type","placeholder","onChange","src","img","alt","height","width","symbol","assetId","CoinSelector","isReadOnly","selected","setSelected","dialog","useDialogProps","Button","openButtonProps","size","Dialog","dialogProps","close","parseValueBigInt","_value","parseValue","parseUnits","DECIMAL_UNITS","toBigInt","formatValue","amount","formatUnits","useCoinInput","initialAmount","showBalance","gasFee","onInput","params","setAmount","opts","wallet","useWallet","useQuery","getBalances","useBalances","enabled","balances","data","coinBalance","find","getSafeMaxBalance","BigInt","formatted","getInputProps","displayType","val","next","isAllowed","setMaxBalance","balance","showMaxButton","hasEnoughBalance","CoinInput","initialValue","onChangeCoin","coinSelectorDisabled","autoFocus","getInputRef","allowNegative","defaultValue","e","target","decimalScale","thousandSeparator","onPress","variant","Link","href","isExternal","children","useButton","elementType","buttonProps","isPressed","rel","PageContent","title","Children","child","id","customChildren","filter","classNames","PageTitle","elementRight","Title","Spinner","xmlns","fill","viewBox","cy","r","stroke","strokeWidth","d","TOKEN_ID","CONTRACT_ID","objectId","sleep","ms","Promise","resolve","setTimeout","AssetItem","input","useFaucet","useAppContext","faucet","useMutation","WalletCard","onFaucetAdded","faucetMutation","onSuccess","toast","titleElementRight","ENABLE_FAUCET_API","to","Pages","isLoading","mutate","clipboard","address","icon","slice","PUBLIC_URL","process","useAssets","refetch","coins","coinMetadata","c","urljoin","mergeCoinsWithMetadata","WalletPage","createWallet","createWalletMutation"],"sourceRoot":""}