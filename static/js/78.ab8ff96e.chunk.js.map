{"version":3,"file":"static/js/78.ab8ff96e.chunk.js","mappings":"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","sources":["lib/utils.ts","components/TextInput.tsx","pages/MintTokenPage.tsx","hooks/useTokensMethods.ts","../node_modules/url-join/lib/url-join.js"],"sourcesContent":["import urljoin from 'url-join';\n\nconst { PUBLIC_URL } = process.env;\n\nexport const objectId = (value: string) => ({\n  value,\n});\n\nexport const sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n\nexport const relativeUrl = (path: string) => urljoin(PUBLIC_URL, path);\n","const style = {\n  transferPropContainer: `bg-gray-700 rounded-2xl p-4 text-3xl border border-gray-700\n        flex justify-between`,\n  transferPropInput: `bg-transparent placeholder:text-gray-300 outline-none w-full text-xl`,\n};\n\nexport function TextInput({\n  value,\n  onChange,\n  disabled,\n  placeholder,\n}: {\n  disabled?: boolean;\n  value?: string;\n  placeholder?: string;\n  onChange?: (value: string) => void;\n}) {\n  return (\n    <div className={style.transferPropContainer}>\n      <input\n        placeholder={placeholder}\n        value={value}\n        disabled={disabled}\n        onChange={(e) => onChange?.(e.target.value)}\n        className={style.transferPropInput}\n      />\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { RiSettings3Fill } from \"react-icons/ri\";\nimport { TextInput } from \"src/components/TextInput\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Pages } from \"src/types/pages\";\nimport { sleep } from \"src/lib/utils\";\nimport { DECIMAL_UNITS, MINT_AMOUNT, TOKEN_ID } from \"src/config\";\nimport { formatUnits } from \"ethers/lib/utils\";\nimport { useMutation } from \"react-query\";\nimport { useTokenMethods } from \"src/hooks/useTokensMethods\";\nimport toast from \"react-hot-toast\";\n\nconst style = {\n  wrapper: `w-screen flex flex-1 items-center justify-center pb-14`,\n  content: `bg-gray-800 w-[30rem] rounded-2xl p-4 m-2`,\n  formHeader: `px-2 flex items-center justify-between font-semibold text-xl`,\n  confirmButton: `bg-primary-500 my-2 rounded-2xl py-6 px-8 text-xl font-semibold flex items-center\n    justify-center cursor-pointer border border-primary-500 hover:border-primary-600 mt-8`,\n};\n\nexport default function MintTokenPage() {\n  const [asset, setAsset] = useState(TOKEN_ID);\n  const methods = useTokenMethods(TOKEN_ID);\n  const navigate = useNavigate();\n\n  const mintMutation = useMutation(\n    async () => {\n      const amount = MINT_AMOUNT;\n      await methods.mint(amount);\n      // Transfer minted coins to the output\n      await methods.transferTo(amount, { variableOutputs: 1 });\n      await sleep(1000);\n    },\n    {\n      onSuccess: () => {\n        // Navigate to assets page to show new cons\n        // https://github.com/FuelLabs/swayswap-demo/issues/40\n        toast.success(`Token minted successfully!`);\n        navigate(Pages.wallet);\n      },\n    }\n  );\n\n  return (\n    <div className={style.wrapper}>\n      <div className={style.content}>\n        <div className={style.formHeader}>\n          <h1>Mint tokens</h1>\n          <div>\n            <RiSettings3Fill />\n          </div>\n        </div>\n        <div className=\"mt-8\">\n          <label className=\"mx-2 mb-2 flex text-gray-300\">\n            Paste the the token contractId\n          </label>\n          {/* TODO: Add validation of contract id, querying from the the core */}\n          {/* TODO: Add validation to match a valid address */}\n          {/* https://github.com/FuelLabs/swayswap-demo/issues/41 */}\n          <TextInput value={asset} placeholder={\"\"} onChange={setAsset} />\n        </div>\n        <div\n          onClick={() => !mintMutation.isLoading && mintMutation.mutate()}\n          className={style.confirmButton}\n        >\n          {!mintMutation.isLoading\n            ? `Mint ${formatUnits(MINT_AMOUNT, DECIMAL_UNITS)} tokens`\n            : `Minting ${formatUnits(MINT_AMOUNT, DECIMAL_UNITS)} tokens...`}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { Overrides } from 'fuels';\nimport { useMemo } from 'react';\nimport { useWallet } from 'src/context/AppContext';\nimport { TokenContractAbi__factory } from 'src/types/contracts';\nimport { objectId } from '../lib/utils';\n\nexport function useTokenMethods(tokenId: string) {\n  const wallet = useWallet()!;\n  const contract = useMemo(\n    () => TokenContractAbi__factory.connect(tokenId, wallet),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [wallet.address]\n  );\n\n  return {\n    contract,\n    getBalance() {\n      return wallet.getBalance(tokenId);\n    },\n    mint(amount: bigint) {\n      return contract.functions.mint_coins(amount);\n    },\n    transferTo(amount: bigint, overrides: Overrides & { from?: string | Promise<string> } = {}) {\n      return contract.functions.transfer_coins_to_output(\n        amount,\n        objectId(contract.id),\n        objectId(wallet.address),\n        overrides\n      );\n    },\n  };\n}\n","(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (strArray) {\n    var resultArray = [];\n    if (strArray.length === 0) { return ''; }\n\n    if (typeof strArray[0] !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + strArray[0]);\n    }\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') { continue; }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n\n    }\n\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n\n});\n"],"names":["objectId","value","sleep","ms","Promise","resolve","setTimeout","relativeUrl","path","urljoin","process","style","TextInput","onChange","disabled","placeholder","className","e","target","MintTokenPage","useState","TOKEN_ID","asset","setAsset","methods","tokenId","wallet","useWallet","contract","useMemo","TokenContractAbi__factory","address","getBalance","mint","amount","functions","mint_coins","transferTo","overrides","transfer_coins_to_output","id","useTokenMethods","navigate","useNavigate","mintMutation","useMutation","MINT_AMOUNT","variableOutputs","onSuccess","toast","Pages","onClick","isLoading","mutate","formatUnits","DECIMAL_UNITS","definition","normalize","strArray","resultArray","length","TypeError","match","first","shift","replace","i","component","push","str","join","parts","split","arguments","slice","call","module","exports","define"],"sourceRoot":""}