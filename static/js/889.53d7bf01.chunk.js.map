{"version":3,"file":"static/js/889.53d7bf01.chunk.js","mappings":"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","sources":["components/CoinInput.tsx","lib/CoinsMetadata.ts","lib/utils.ts","components/InvertButton.tsx","pages/SwapPage.tsx"],"sourcesContent":["import { Menu, Transition } from \"@headlessui/react\";\nimport classNames from \"classnames\";\nimport { formatUnits, parseUnits } from \"ethers/lib/utils\";\nimport { BigNumber } from \"fuels\";\nimport { useCallback } from \"react\";\nimport { useEffect } from \"react\";\nimport { Fragment, useState } from \"react\";\nimport NumberFormat from \"react-number-format\";\nimport { DECIMAL_UNITS } from \"src/config\";\nimport urlJoin from \"url-join\";\n\nconst { PUBLIC_URL } = process.env;\n\nconst style = {\n  transferPropContainer: `bg-[#20242A] rounded-2xl p-4 text-3xl border border-[#20242A] \n      flex justify-between`,\n  transferPropInput: `bg-transparent placeholder:text-[#B2B9D2] outline-none w-full text-2xl`,\n  // coin selector\n  currencySelector: `flex1`,\n  currencySelectorMenuItems: `absolute w-full mt-2 bg-[#191B1F] divide-gray-100 \n      rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none z-10`,\n  currencySelectorItem: `flex justify-around rounded-md w-full px-2 py-2 text-sm cursor-pointer`,\n  currencySelectorContent: `w-full h-min flex justify-between items-center bg-[#2D2F36] \n      rounded-2xl text-xl font-medium p-2 mt-[-0.2rem] focus:outline-none`,\n  currencySelectorTicker: `mx-2`,\n  menuWrapper: `px-1 py-1`,\n};\n\nexport interface Coin {\n  assetId: string;\n  name?: string;\n  img?: string;\n}\n\nexport function CoinSelector({\n  value,\n  coins,\n  onChange,\n}: {\n  value?: Coin | null;\n  onChange?: (coin: Coin) => void;\n  coins?: Array<Coin>;\n}) {\n  const [selected, setSelected] = useState<Coin | null>(null);\n  const hasCoins = coins && coins.length > 1;\n\n  useEffect(() => {\n    if (!value) {\n      return setSelected(null);\n    }\n    setSelected(value);\n  }, [value]);\n\n  const handleSelect = useCallback(\n    (coin: Coin) => {\n      setSelected(coin);\n      onChange?.(coin);\n    },\n    [setSelected, onChange]\n  );\n\n  return (\n    <div className={style.currencySelector}>\n      <Menu as=\"div\" className=\"relative inline-block text-left\">\n        <div>\n          <Menu.Button\n            className={classNames({\n              \"cursor-default\": !hasCoins,\n            })}\n          >\n            <div\n              className={classNames(style.currencySelectorContent, {\n                \"hover:bg-opacity-30\": hasCoins,\n              })}\n            >\n              {selected && selected.img && (\n                <img\n                  className=\"rounded-full border-none\"\n                  src={urlJoin(PUBLIC_URL, selected.img)}\n                  alt=\"eth\"\n                  height={24}\n                  width={24}\n                />\n              )}\n              <div className={style.currencySelectorTicker}>\n                {selected?.name}\n              </div>\n            </div>\n          </Menu.Button>\n        </div>\n        {hasCoins && (\n          <Transition\n            as={Fragment}\n            enter=\"transition ease-out duration-100\"\n            enterFrom=\"transform opacity-0 scale-95\"\n            enterTo=\"transform opacity-100 scale-100\"\n            leave=\"transition ease-in duration-75\"\n            leaveFrom=\"transform opacity-100 scale-100\"\n            leaveTo=\"transform opacity-0 scale-95\"\n          >\n            <Menu.Items className={style.currencySelectorMenuItems}>\n              <div className={style.menuWrapper}>\n                {coins.map((coin) => (\n                  <Menu.Item key={coin.assetId}>\n                    {({ active }) => (\n                      <div\n                        className={classNames(style.currencySelectorItem, {\n                          \"bg-[#2D2F36] text-white\": active,\n                          \"text-white\": !active,\n                        })}\n                        onClick={() => handleSelect(coin)}\n                      >\n                        {coin && coin.img && (\n                          <div className=\"flex flex-wrap justify-center\">\n                            <div className=\"w-6/12 px-4 sm:w-4/12\">\n                              <img\n                                className=\"h-auto max-w-full rounded border-none align-middle shadow-lg\"\n                                src={urlJoin(PUBLIC_URL, coin.img)}\n                                alt=\"eth\"\n                                height={24}\n                                width={24}\n                              />\n                            </div>\n                          </div>\n                        )}\n                        <div className={style.currencySelectorTicker}>\n                          {coin?.name}\n                        </div>\n                      </div>\n                    )}\n                  </Menu.Item>\n                ))}\n              </div>\n            </Menu.Items>\n          </Transition>\n        )}\n      </Menu>\n    </div>\n  );\n}\n\nexport function CoinInput({\n  amount,\n  coin,\n  coins,\n  disabled,\n  onChangeAmount,\n  onChangeCoin,\n  onInput,\n}: {\n  disabled?: boolean;\n  amount?: BigNumber | null;\n  coin?: Coin | null;\n  coins?: Coin[];\n  onChangeAmount?: (value: BigNumber | null) => void;\n  onChangeCoin?: (value: Coin) => void;\n  onInput?: (...args: any) => void;\n}) {\n  return (\n    <div className={style.transferPropContainer}>\n      <div className=\"flex-1\">\n        <NumberFormat\n          placeholder=\"0\"\n          decimalScale={DECIMAL_UNITS}\n          value={amount && formatUnits(amount, DECIMAL_UNITS)}\n          displayType={disabled ? \"text\" : \"input\"}\n          onValueChange={(e) =>\n            onChangeAmount?.(e.value !== \"\" ? parseUnits(e.value, DECIMAL_UNITS) : null)\n          }\n          className={style.transferPropInput}\n          thousandSeparator={false}\n          onInput={onInput}\n        />\n      </div>\n      <CoinSelector coins={coins} value={coin} onChange={onChangeCoin} />\n    </div>\n  );\n}\n","import { Coin } from 'src/components/CoinInput';\nimport { CONTRACT_ID, TOKEN_ID } from 'src/config';\n\nconst CoinsMetadata: Array<Coin> = [\n  {\n    name: 'ETH',\n    assetId: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    img: '/icons/eth.svg',\n  },\n  {\n    name: 'DAI',\n    // TODO: Remove this when adding dynamic token insertion\n    // Make temporarily easy to change token contract id\n    // https://github.com/FuelLabs/swayswap-demo/issues/33\n    assetId: TOKEN_ID,\n    img: '/icons/dai.svg',\n  },\n  {\n    name: 'SWAY',\n    // TODO: Remove this when adding dynamic token insertion\n    // Make temporarily easy to change token contract id\n    // https://github.com/FuelLabs/swayswap-demo/issues/33\n    assetId: CONTRACT_ID,\n    img: '/icons/sway.svg',\n  },\n];\n\nexport default CoinsMetadata;\n","export const objectId = (value: string) => ({\n  value,\n});\n\nexport const sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n","import { AiOutlineArrowDown } from \"react-icons/ai\";\n\nconst style = {\n  confirmButton: `rounded-2xl font-semibold p-1 border border-[#20242A] bg-[#191B1F] border-4 rounded-2xl cursor-pointer`,\n};\n\nexport function InvertButton({ onClick }: { onClick: () => void }) {\n  return (\n    <div onClick={onClick} className={style.confirmButton}>\n      <AiOutlineArrowDown size={32} />\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { RiSettings3Fill } from \"react-icons/ri\";\nimport assets from \"src/lib/CoinsMetadata\";\nimport { Coin, CoinInput } from \"src/components/CoinInput\";\nimport { InvertButton } from \"src/components/InvertButton\";\nimport { useContract } from \"src/context/AppContext\";\nimport { SwayswapContractAbi } from \"src/types/contracts\";\nimport { BigNumber } from \"fuels\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Pages } from \"src/types/pages\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { sleep } from \"src/lib/utils\";\n\nconst style = {\n  wrapper: `w-screen flex flex-1 items-center justify-center mb-14`,\n  content: `bg-[#191B1F] w-[30rem] rounded-2xl p-4 m-2`,\n  formHeader: `px-2 flex items-center justify-between font-semibold text-xl`,\n  confirmButton: `bg-[#58c09b] my-2 rounded-2xl py-6 px-8 text-xl font-semibold flex items-center\n    justify-center cursor-pointer border border-[#58c09b] hover:border-[#234169] mt-8`,\n  switchDirection: `flex items-center justify-center -my-3`,\n};\n\nconst getSwapWithMaximumRequiredAmount = async (\n  contract: SwayswapContractAbi,\n  assetId: string,\n  amount: BigNumber\n) => {\n  const requiredAmount = await contract.callStatic.get_swap_with_maximum(\n    amount,\n    {\n      forward: [0, assetId],\n    }\n  );\n  return requiredAmount;\n};\n\nconst getSwapWithMinimumMinAmount = async (\n  contract: SwayswapContractAbi,\n  assetId: string,\n  amount: BigNumber\n) => {\n  const minAmount = await contract.callStatic.get_swap_with_minimum(amount, {\n    forward: [0, assetId],\n  });\n  return minAmount;\n};\n\nexport default function SwapPage() {\n  const contract = useContract()!;\n  const [[coinFrom, coinTo], setCoins] = useState<[Coin, Coin]>([\n    assets[0],\n    assets[1],\n  ]);\n  const getOtherCoins = (coins: Coin[]) =>\n    assets.filter(({ assetId }) => !coins.find((c) => c.assetId === assetId));\n  const [fromAmount, setFromAmount] = useState(null as BigNumber | null);\n  const [toAmount, setToAmount] = useState(null as BigNumber | null);\n  const [activeInput, setActiveInput] = useState(null as \"from\" | \"to\" | null);\n  const navigate = useNavigate();\n\n  const { data: inactiveAmount } = useQuery(\n    [\"SwapPage-inactiveAmount\", activeInput, toAmount, fromAmount],\n    async () => {\n      if (activeInput === \"to\") {\n        if (!toAmount) return null;\n        return await getSwapWithMaximumRequiredAmount(\n          contract,\n          coinFrom.assetId,\n          toAmount\n        );\n      } else if (activeInput === \"from\") {\n        if (!fromAmount) return null;\n        return await getSwapWithMinimumMinAmount(\n          contract,\n          coinFrom.assetId,\n          fromAmount\n        );\n      } else {\n        return null;\n      }\n    }\n  );\n\n  const swapMutation = useMutation(\n    async () => {\n      if (!fromAmount) {\n        throw new Error('\"fromAmount\" is required');\n      }\n      if (!toAmount) {\n        throw new Error('\"toAmount\" is required');\n      }\n\n      const deadline = 1000;\n\n      if (activeInput === \"to\") {\n        const forwardAmount = await getSwapWithMaximumRequiredAmount(\n          contract,\n          coinFrom.assetId,\n          toAmount\n        );\n        await contract.functions.swap_with_maximum(toAmount, deadline, {\n          forward: [forwardAmount, coinFrom.assetId],\n          variableOutputs: 1,\n        });\n      } else if (activeInput === \"from\") {\n        const minValue = await getSwapWithMinimumMinAmount(\n          contract,\n          coinFrom.assetId,\n          fromAmount\n        );\n        await contract.functions.swap_with_minimum(minValue, deadline, {\n          forward: [fromAmount, coinFrom.assetId],\n          variableOutputs: 1,\n        });\n      } else {\n        throw new Error(`Invalid mode \"${activeInput}\"`);\n      }\n      await sleep(1000);\n    },\n    {\n      onSuccess: () => {\n        // TODO: Improve feedback after swap\n        navigate(Pages.wallet);\n      },\n    }\n  );\n\n  return (\n    <div className={style.wrapper}>\n      <div className={style.content}>\n        <div className={style.formHeader}>\n          <h1>Swap</h1>\n          <div>\n            {/* <RiSettings3Fill /> */}\n          </div>\n        </div>\n\n        <div className=\"mt-6\">\n          <CoinInput\n            coin={coinFrom}\n            amount={activeInput === \"from\" ? fromAmount : inactiveAmount}\n            onInput={() => setActiveInput(\"from\")}\n            onChangeAmount={(amount) => {\n              if (activeInput === \"from\") setFromAmount(amount);\n            }}\n            coins={getOtherCoins([coinFrom, coinTo])}\n            onChangeCoin={(coin: Coin) => setCoins([coin, coinTo])}\n          />\n        </div>\n        <div className={style.switchDirection}>\n          <InvertButton\n            onClick={() => {\n              const _toAmount = toAmount;\n              setToAmount(fromAmount);\n              setFromAmount(_toAmount);\n              setCoins([coinTo, coinFrom]);\n            }}\n          />\n        </div>\n        <div className=\"mb-10\">\n          <CoinInput\n            coin={coinTo}\n            amount={activeInput === \"to\" ? toAmount : inactiveAmount}\n            onInput={() => setActiveInput(\"to\")}\n            onChangeAmount={(amount) => {\n              if (activeInput === \"to\") setToAmount(amount);\n            }}\n            coins={getOtherCoins([coinFrom, coinTo])}\n            onChangeCoin={(coin: Coin) => setCoins([coinFrom, coin])}\n          />\n        </div>\n        <div\n          onClick={() => swapMutation.mutate()}\n          className={style.confirmButton}\n        >\n          Confirm\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["PUBLIC_URL","process","style","CoinSelector","value","coins","onChange","useState","selected","setSelected","hasCoins","length","useEffect","handleSelect","useCallback","coin","className","as","classNames","img","src","urlJoin","alt","height","width","name","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","map","active","onClick","assetId","CoinInput","amount","disabled","onChangeAmount","onChangeCoin","onInput","placeholder","decimalScale","DECIMAL_UNITS","formatUnits","displayType","onValueChange","e","parseUnits","thousandSeparator","CoinsMetadata","TOKEN_ID","CONTRACT_ID","objectId","sleep","ms","Promise","resolve","setTimeout","InvertButton","size","getSwapWithMaximumRequiredAmount","contract","callStatic","get_swap_with_maximum","forward","requiredAmount","getSwapWithMinimumMinAmount","get_swap_with_minimum","minAmount","SwapPage","useContract","assets","coinFrom","coinTo","setCoins","getOtherCoins","find","c","fromAmount","setFromAmount","toAmount","setToAmount","activeInput","setActiveInput","navigate","useNavigate","inactiveAmount","useQuery","data","swapMutation","useMutation","Error","deadline","forwardAmount","functions","swap_with_maximum","variableOutputs","minValue","swap_with_minimum","onSuccess","Pages","_toAmount","mutate"],"sourceRoot":""}