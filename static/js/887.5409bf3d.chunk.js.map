{"version":3,"file":"static/js/887.5409bf3d.chunk.js","mappings":"sPAUQA,EAAeC,YAEjBC,EACkB,6FADlBA,EAGc,yEAHdA,EAKa,QALbA,EAMsB,0IANtBA,EAQiB,yEARjBA,EASoB,0IATpBA,EAWmB,OAXnBA,EAYQ,YASP,SAASC,EAAT,GAQH,IAPFC,EAOC,EAPDA,MACAC,EAMC,EANDA,MACAC,EAKC,EALDA,SAMA,GAAgCC,EAAAA,EAAAA,UAAsB,MAAtD,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAWL,GAASA,EAAMM,OAAS,GAEzCC,EAAAA,EAAAA,YAAU,WACR,IAAKR,EACH,OAAOK,EAAY,MAErBA,EAAYL,KACX,CAACA,IAEJ,IAAMS,GAAeC,EAAAA,EAAAA,cACnB,SAACC,GACCN,EAAYM,GACJ,OAART,QAAQ,IAARA,GAAAA,EAAWS,KAEb,CAACN,EAAaH,IAGhB,OACE,gBAAKU,UAAWd,EAAhB,UACE,UAAC,KAAD,CAAMe,GAAG,MAAMD,UAAU,kCAAzB,WACE,0BACE,SAAC,YAAD,CACEA,UAAWE,GAAAA,CAAW,CACpB,kBAAmBR,IAFvB,UAKE,iBACEM,UAAWE,GAAAA,CAAWhB,EAA+B,CACnD,sBAAuBQ,IAF3B,UAKGF,GAAYA,EAASW,MACpB,gBACEH,UAAU,2BACVI,IAAKC,GAAAA,CAAQrB,EAAYQ,EAASW,KAClCG,IAAI,MACJC,OAAQ,GACRC,MAAO,MAGX,gBAAKR,UAAWd,EAAhB,gBACGM,QADH,IACGA,OADH,EACGA,EAAUiB,cAKlBf,IACC,SAAC,KAAD,CACEO,GAAIS,EAAAA,SACJC,MAAM,mCACNC,UAAU,+BACVC,QAAQ,kCACRC,MAAM,iCACNC,UAAU,kCACVC,QAAQ,+BAPV,UASE,SAAC,WAAD,CAAYhB,UAAWd,EAAvB,UACE,gBAAKc,UAAWd,EAAhB,SACGG,EAAM4B,KAAI,SAAClB,GAAD,OACT,SAAC,UAAD,UACG,gBAAGmB,EAAH,EAAGA,OAAH,OACC,iBACElB,UAAWE,GAAAA,CAAWhB,EAA4B,CAChD,0BAA2BgC,EAC3B,cAAeA,IAEjBC,QAAS,kBAAMtB,EAAaE,IAL9B,UAOGA,GAAQA,EAAKI,MACZ,gBAAKH,UAAU,gCAAf,UACE,gBAAKA,UAAU,wBAAf,UACE,gBACEA,UAAU,+DACVI,IAAKC,GAAAA,CAAQrB,EAAYe,EAAKI,KAC9BG,IAAI,MACJC,OAAQ,GACRC,MAAO,UAKf,gBAAKR,UAAWd,EAAhB,gBACGa,QADH,IACGA,OADH,EACGA,EAAMU,YAvBCV,EAAKqB,uBAsChC,SAASC,EAAT,GAgBH,IAfFC,EAeC,EAfDA,OACAvB,EAcC,EAdDA,KACAV,EAaC,EAbDA,MACAkC,EAYC,EAZDA,SACAC,EAWC,EAXDA,eACAC,EAUC,EAVDA,aACAC,EASC,EATDA,QAUA,OACE,iBAAK1B,UAAWd,EAAhB,WACE,gBAAKc,UAAU,SAAf,UACE,SAAC,IAAD,CACE2B,YAAY,MACZvC,MAAOkC,IAAUM,EAAAA,EAAAA,aAAYN,EAAQ,GACrCO,YAAaN,EAAW,OAAS,QACjCO,cAAe,SAACC,GAAD,cAAOP,QAAP,IAAOA,OAAP,EAAOA,GAAiBQ,EAAAA,EAAAA,YAAWD,EAAE3C,MAAO,KAC3DY,UAAWd,EACX+C,mBAAmB,EACnBP,QAASA,OAGb,SAACvC,EAAD,CAAcE,MAAOA,EAAOD,MAAOW,EAAMT,SAAUmC,S,mCCvKnDS,EAA6B,CACjC,CACEzB,KAAM,MACNW,QAAS,qEACTjB,IAAK,kBAEP,CACEM,KAAM,MAINW,QAASe,EAAAA,GACThC,IAAK,kBAEP,CACEM,KAAM,OAINW,QAASgB,EAAAA,GACTjC,IAAK,oBAIT,O,wNChBMjB,EACI,yDADJA,EAEI,yCAFJA,EAGO,+DAHPA,EAIU,2MAKD,SAASmD,IACtB,IAAMC,EAAiBjD,EAAAA,EAAAA,MAAW,SAACkD,GAAD,OAAOA,EAAEnB,UAAYgB,EAAAA,MACvD,GAA4B7C,EAAAA,EAAAA,UAAS,MAArC,eAAO+B,EAAP,KAAekB,EAAf,KACA,GAA8BjD,EAAAA,EAAAA,UAAS,MAAvC,eAAOkD,EAAP,KAAgBC,EAAhB,KACA,GAAgCnD,EAAAA,EAAAA,WAAS,GAAzC,eAAOoD,EAAP,KAAkBC,EAAlB,KACMC,GAASC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MAEXC,GAAyBnD,EAAAA,EAAAA,cAAW,iBAAC,sGACrB+C,EAAOK,cADc,cACnC7D,EADmC,OAEnCiD,EAAiBjD,EAAM8D,MAAK,SAACZ,GAAD,OAAOA,EAAEnB,UAAYgB,EAAAA,MAFd,kBAGlCE,GAHkC,2CAIxC,CAACO,IAEEO,EAAe,mCAAG,2FACjB9B,EADiB,sBAEd,IAAI+B,MAAM,wBAFI,cAItBT,GAAW,GAJW,SAKOK,IALP,cAKhBX,EALgB,OAMtB,OAAIhB,QAAJ,IAAIA,GAAAA,EAAQgC,GAAR,iBAAWhB,QAAX,IAAWA,OAAX,EAAWA,EAAgBhB,cAA3B,QAAqC,IACvCiC,MAAM,8CAPc,SAUdC,EAAWC,EAAAA,EAAAA,QACfrB,EAAAA,GACAS,GAZkB,UAgBdW,EAASE,UAAUC,iBAAiB,EAAG,EAAG,IAAM,CACpDC,QAAS,CAACtC,EAAQc,EAAAA,IAClByB,gBAAiB,IAlBC,QAoBpBd,EAASe,EAAAA,EAAAA,QApBW,kDAsBpBP,MAAM,KAAIQ,SAtBU,QAwBtBnB,GAAW,GAxBW,0DAAH,qDAmCrB,OARAhD,EAAAA,EAAAA,YAAU,WACR,IAAMoE,EAAI,mCAAG,sGACkBf,IADlB,OACLX,EADK,OAEXI,EAAU,iBAACJ,QAAD,IAACA,OAAD,EAACA,EAAgBhB,cAAjB,QAA2B2C,EAAAA,UAAAA,KAAe,IAFzC,2CAAH,qDAIVD,MACC,CAACf,IAECX,GAKH,gBAAKtC,UAAWd,EAAhB,UACE,iBAAKc,UAAWd,EAAhB,WACE,gBAAKc,UAAWd,EAAhB,UACE,gDAEF,iBAAKc,UAAU,aAAf,WACE,SAAC,IAAD,CACED,KAAMuC,EACNhB,OAAQA,EACRE,eAAgB,SAACF,GAAD,OAAYkB,EAAUlB,OAExC,iBACEtB,UAAU,iEACVmB,QAAS,kBAAMqB,EAAUC,IAF3B,yBAIeA,GAAUb,EAAAA,EAAAA,aAAYa,EAAS,GAAK,aAGrD,mBACEtB,QAAS,SAACY,GAAD,OAAOqB,KAChBpD,UAAWd,EACXqC,UAAWD,IAAWmB,GAAWnB,EAAOgC,GAAGb,IAAYE,EAHzD,SAKGA,EAAY,cAAgB,0BA3B5B","sources":["components/CoinInput.tsx","lib/CoinsMetadata.ts","pages/RemoveLiquidityPage.tsx"],"sourcesContent":["import { Menu, Transition } from \"@headlessui/react\";\nimport classNames from \"classnames\";\nimport { formatUnits, parseUnits } from \"ethers/lib/utils\";\nimport { BigNumber } from \"fuels\";\nimport { useCallback } from \"react\";\nimport { useEffect } from \"react\";\nimport { Fragment, useState } from \"react\";\nimport NumberFormat from \"react-number-format\";\nimport urlJoin from \"url-join\";\n\nconst { PUBLIC_URL } = process.env;\n\nconst style = {\n  transferPropContainer: `bg-[#20242A] rounded-2xl p-4 text-3xl border border-[#20242A] \n      flex justify-between`,\n  transferPropInput: `bg-transparent placeholder:text-[#B2B9D2] outline-none w-full text-2xl`,\n  // coin selector\n  currencySelector: `flex1`,\n  currencySelectorMenuItems: `absolute w-full mt-2 bg-[#191B1F] divide-gray-100 \n      rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none z-10`,\n  currencySelectorItem: `flex justify-around rounded-md w-full px-2 py-2 text-sm cursor-pointer`,\n  currencySelectorContent: `w-full h-min flex justify-between items-center bg-[#2D2F36] \n      rounded-2xl text-xl font-medium p-2 mt-[-0.2rem] focus:outline-none`,\n  currencySelectorTicker: `mx-2`,\n  menuWrapper: `px-1 py-1`,\n};\n\nexport interface Coin {\n  assetId: string;\n  name?: string;\n  img?: string;\n}\n\nexport function CoinSelector({\n  value,\n  coins,\n  onChange,\n}: {\n  value?: Coin | null;\n  onChange?: (coin: Coin) => void;\n  coins?: Array<Coin>;\n}) {\n  const [selected, setSelected] = useState<Coin | null>(null);\n  const hasCoins = coins && coins.length > 1;\n\n  useEffect(() => {\n    if (!value) {\n      return setSelected(null);\n    }\n    setSelected(value);\n  }, [value]);\n\n  const handleSelect = useCallback(\n    (coin: Coin) => {\n      setSelected(coin);\n      onChange?.(coin);\n    },\n    [setSelected, onChange]\n  );\n\n  return (\n    <div className={style.currencySelector}>\n      <Menu as=\"div\" className=\"relative inline-block text-left\">\n        <div>\n          <Menu.Button\n            className={classNames({\n              \"cursor-default\": !hasCoins,\n            })}\n          >\n            <div\n              className={classNames(style.currencySelectorContent, {\n                \"hover:bg-opacity-30\": hasCoins,\n              })}\n            >\n              {selected && selected.img && (\n                <img\n                  className=\"rounded-full border-none\"\n                  src={urlJoin(PUBLIC_URL, selected.img)}\n                  alt=\"eth\"\n                  height={24}\n                  width={24}\n                />\n              )}\n              <div className={style.currencySelectorTicker}>\n                {selected?.name}\n              </div>\n            </div>\n          </Menu.Button>\n        </div>\n        {hasCoins && (\n          <Transition\n            as={Fragment}\n            enter=\"transition ease-out duration-100\"\n            enterFrom=\"transform opacity-0 scale-95\"\n            enterTo=\"transform opacity-100 scale-100\"\n            leave=\"transition ease-in duration-75\"\n            leaveFrom=\"transform opacity-100 scale-100\"\n            leaveTo=\"transform opacity-0 scale-95\"\n          >\n            <Menu.Items className={style.currencySelectorMenuItems}>\n              <div className={style.menuWrapper}>\n                {coins.map((coin) => (\n                  <Menu.Item key={coin.assetId}>\n                    {({ active }) => (\n                      <div\n                        className={classNames(style.currencySelectorItem, {\n                          \"bg-[#2D2F36] text-white\": active,\n                          \"text-white\": !active,\n                        })}\n                        onClick={() => handleSelect(coin)}\n                      >\n                        {coin && coin.img && (\n                          <div className=\"flex flex-wrap justify-center\">\n                            <div className=\"w-6/12 px-4 sm:w-4/12\">\n                              <img\n                                className=\"h-auto max-w-full rounded border-none align-middle shadow-lg\"\n                                src={urlJoin(PUBLIC_URL, coin.img)}\n                                alt=\"eth\"\n                                height={24}\n                                width={24}\n                              />\n                            </div>\n                          </div>\n                        )}\n                        <div className={style.currencySelectorTicker}>\n                          {coin?.name}\n                        </div>\n                      </div>\n                    )}\n                  </Menu.Item>\n                ))}\n              </div>\n            </Menu.Items>\n          </Transition>\n        )}\n      </Menu>\n    </div>\n  );\n}\n\nexport function CoinInput({\n  amount,\n  coin,\n  coins,\n  disabled,\n  onChangeAmount,\n  onChangeCoin,\n  onInput,\n}: {\n  disabled?: boolean;\n  amount?: BigNumber | null;\n  coin?: Coin | null;\n  coins?: Coin[];\n  onChangeAmount?: (value: BigNumber | null) => void;\n  onChangeCoin?: (value: Coin) => void;\n  onInput?: (...args: any) => void;\n}) {\n  return (\n    <div className={style.transferPropContainer}>\n      <div className=\"flex-1\">\n        <NumberFormat\n          placeholder=\"0.0\"\n          value={amount && formatUnits(amount, 9)}\n          displayType={disabled ? \"text\" : \"input\"}\n          onValueChange={(e) => onChangeAmount?.(parseUnits(e.value, 9))}\n          className={style.transferPropInput}\n          thousandSeparator={false}\n          onInput={onInput}\n        />\n      </div>\n      <CoinSelector coins={coins} value={coin} onChange={onChangeCoin} />\n    </div>\n  );\n}\n","import { Coin } from 'src/components/CoinInput';\nimport { CONTRACT_ID, TOKEN_ID } from 'src/config';\n\nconst CoinsMetadata: Array<Coin> = [\n  {\n    name: 'ETH',\n    assetId: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    img: '/icons/eth.svg',\n  },\n  {\n    name: 'DAI',\n    // TODO: Remove this when adding dynamic token insertion\n    // Make temporarily easy to change token contract id\n    // https://github.com/FuelLabs/swayswap-demo/issues/33\n    assetId: TOKEN_ID,\n    img: '/icons/dai.svg',\n  },\n  {\n    name: 'SWAY',\n    // TODO: Remove this when adding dynamic token insertion\n    // Make temporarily easy to change token contract id\n    // https://github.com/FuelLabs/swayswap-demo/issues/33\n    assetId: CONTRACT_ID,\n    img: '/icons/sway.svg',\n  },\n];\n\nexport default CoinsMetadata;\n","import { formatUnits } from \"ethers/lib/utils\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useWallet } from \"src/context/AppContext\";\nimport { SwayswapContractAbi__factory } from \"src/types/contracts\";\nimport coins from \"src/lib/CoinsMetadata\";\nimport { CoinInput } from \"src/components/CoinInput\";\nimport { useNavigate } from \"react-router-dom\";\nimport { BigNumber } from \"fuels\";\nimport { Pages } from \"src/types/pages\";\nimport { CONTRACT_ID } from \"src/config\";\n\nconst style = {\n  wrapper: `w-screen flex flex-1 items-center justify-center mb-14`,\n  content: `bg-[#191B1F] w-[40rem] rounded-2xl p-4`,\n  formHeader: `px-2 flex items-center justify-between font-semibold text-xl`,\n  confirmButton: `bg-[#58c09b] my-2 rounded-2xl py-6 px-8 text-xl font-semibold flex items-center\n    justify-center cursor-pointer border border-[#58c09b] hover:border-[#234169] mt-8 w-full\n    disabled:bg-[#a0bbb1]`,\n};\n\nexport default function RemoveLiquidityPage() {\n  const liquidityToken = coins.find((c) => c.assetId === CONTRACT_ID);\n  const [amount, setAmount] = useState(null as BigNumber | null);\n  const [balance, setBalance] = useState(null as BigNumber | null);\n  const [isLoading, setLoading] = useState(false);\n  const wallet = useWallet()!;\n  const navigate = useNavigate();\n\n  const retrieveLiquidityToken = useCallback(async () => {\n    const coins = await wallet.getBalances();\n    const liquidityToken = coins.find((c) => c.assetId === CONTRACT_ID);\n    return liquidityToken;\n  }, [wallet]);\n\n  const removeLiquidity = async () => {\n    if (!amount) {\n      throw new Error('\"amount\" is required');\n    }\n    setLoading(true);\n    const liquidityToken = await retrieveLiquidityToken();\n    if (amount?.gt(liquidityToken?.amount ?? 0)) {\n      alert(\"Amount is bigger them the current balance!\");\n    }\n    try {\n      const swayswap = SwayswapContractAbi__factory.connect(\n        CONTRACT_ID,\n        wallet\n      );\n      // TODO: Add way to set min_eth and min_tokens\n      // https://github.com/FuelLabs/swayswap/issues/55\n      await swayswap.functions.remove_liquidity(1, 1, 1000, {\n        forward: [amount, CONTRACT_ID],\n        variableOutputs: 2,\n      });\n      navigate(Pages.assets);\n    } catch (err: any) {\n      alert(err.message);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    const init = async () => {\n      const liquidityToken = await retrieveLiquidityToken();\n      setBalance(liquidityToken?.amount ?? BigNumber.from(0));\n    };\n    init();\n  }, [retrieveLiquidityToken]);\n\n  if (!liquidityToken) {\n    return null;\n  }\n\n  return (\n    <div className={style.wrapper}>\n      <div className={style.content}>\n        <div className={style.formHeader}>\n          <h1>Remove liquidity</h1>\n        </div>\n        <div className=\"mt-8 mb-10\">\n          <CoinInput\n            coin={liquidityToken}\n            amount={amount}\n            onChangeAmount={(amount) => setAmount(amount)}\n          />\n          <div\n            className=\"mt-3 ml-4 cursor-pointer text-slate-400 underline decoration-1\"\n            onClick={() => setAmount(balance)}\n          >\n            Max amount: {balance ? formatUnits(balance, 9) : \"...\"}\n          </div>\n        </div>\n        <button\n          onClick={(e) => removeLiquidity()}\n          className={style.confirmButton}\n          disabled={!amount || !balance || amount.gt(balance) || isLoading}\n        >\n          {isLoading ? \"Removing...\" : \"Remove liquidity\"}\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"names":["PUBLIC_URL","process","style","CoinSelector","value","coins","onChange","useState","selected","setSelected","hasCoins","length","useEffect","handleSelect","useCallback","coin","className","as","classNames","img","src","urlJoin","alt","height","width","name","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","map","active","onClick","assetId","CoinInput","amount","disabled","onChangeAmount","onChangeCoin","onInput","placeholder","formatUnits","displayType","onValueChange","e","parseUnits","thousandSeparator","CoinsMetadata","TOKEN_ID","CONTRACT_ID","RemoveLiquidityPage","liquidityToken","c","setAmount","balance","setBalance","isLoading","setLoading","wallet","useWallet","navigate","useNavigate","retrieveLiquidityToken","getBalances","find","removeLiquidity","Error","gt","alert","swayswap","SwayswapContractAbi__factory","functions","remove_liquidity","forward","variableOutputs","Pages","message","init","BigNumber"],"sourceRoot":""}