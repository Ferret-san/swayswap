import{E as d,V as o,e as c,x as l,F as g,M as h,D as p,Q as w,y as f,K as v,z as y,G as a}from"./index-9a4bc299.js";import{B as M}from"./BaseConnection-578ec7aa.js";class m extends M{constructor(){super(),this.onMessage=e=>{const t=Object.freeze(e);if(!this.acceptMessage(t))return;const{data:s}=t;this.onCommunicationMessage(s)},window.addEventListener(d,this.onMessage.bind(this))}acceptMessage(e){return!0}postMessage(e,t){window.postMessage(e,t||window.origin)}}function E(n){const e=n.inputs?.map(t=>{switch(t.type){case o.Message:return t.recipient;case o.Coin:return t.owner;default:return}})[0];if(!e)throw new Error("No possible signer found!");return c.fromB256(l(e)).toString()}class C extends m{acceptMessage(e){const{data:t}=e;return e.origin===window.origin&&t.target===g}async sendRequest(e){e&&this.postMessage({type:h.request,target:p,request:e})}async ping(){return this.client.timeout(1e3).request("ping",{})}async network(){return this.client.request("network",{})}async isConnected(){return this.client.request("isConnected",{})}async connect(){return this.client.request("connect",{})}async disconnect(){return this.client.request("disconnect",{})}async accounts(){return this.client.request("accounts",{})}async currentAccount(){return this.client.request("currentAccount",{})}async signMessage(e,t){if(!t.trim())throw new Error("Message is required");return this.client.request("signMessage",{address:e,message:t})}async sendTransaction(e,t,s){if(!e)throw new Error("Transaction is required");const i=w(e),u=s||e.signer||E(i);return this.client.request("sendTransaction",{address:u,provider:t,transaction:JSON.stringify(i)})}on(e,t){return super.on(e,t)}}class T extends f{constructor(e,t){super(e,t),this.provider=t}async signMessage(e){return this.provider.walletConnection.signMessage(this.address.toString(),e)}async sendTransaction(e){return this.provider.sendTransaction({...e,signer:this.address.toString()})}}class q extends v{constructor(e,t){super(e),this.walletConnection=t}async sendTransaction(e){const t=await this.walletConnection.sendTransaction(e,{url:this.url});return new y(t,this)}}const r={};class P extends C{constructor(){super(...arguments),this.utils={createAddress:e=>(console.warn("Do not use this method! It will be removed in the next release."),c.fromString(e))},this.events=a}async getProvider(){const e=await this.network();if(r.provider)return r.provider;const t=new q(e.url,this);return r.provider=t,this.on(a.network,async s=>{r.provider?.connect(s.url)}),r.provider}async getWallet(e){const t=await this.getProvider();return new T(e,t)}}const b=n=>new Proxy(n,{get(e,t){return e[t]},set(e,t,s){return Object.hasOwn(e,t)&&["_eventsCount","_events"].includes(t)?(e[t]=s,!0):!1},defineProperty(e,t){return Object.hasOwn(e,t)?e[t]:!1},deleteProperty(){return!1}});function x(n){const e=b(new P);if(Object.defineProperty(n,"fuel",{value:e,writable:!1,enumerable:!0,configurable:!0}),typeof document<"u"){const t=new CustomEvent("FuelLoaded",{detail:e});document.dispatchEvent(t)}}x(window);
